{
  "basePath": "/",
  "info": {
    "title": "GROWW - Documentation de l’architecture globale",
    "version": "1.0.0",
    "description": "Groww.fr est une application développée par Willemse SAS, spécialisée dans l’accompagnement des jardiniers, amateurs et experts, dans l’entretien de leurs plantes. Elle fournit des conseils personnalisés, des rappels d’entretien et des recommandations adaptées aux saisons et aux types de végétaux. "
  },
  "securityDefinitions": {
    "bearerAuth": { "type": "apiKey", "name": "access_token", "in": "query" }
  },
  "security": [{ "bearerAuth": [] }],
  "tags": [
    { "name": "Account" },
    { "name": "Mailbox", "description": "Manage mailbox folders" },
    { "name": "Message" },
    {
      "name": "Submit",
      "externalDocs": {
        "description": "Documentation",
        "url": "https://emailengine.app/sending-emails"
      }
    },
    {
      "name": "Outbox",
      "description": "Manage scheduled and pending emails in the sending queue"
    },
    {
      "name": "Delivery Test",
      "description": "Test email deliverability, including SPF, DKIM, and DMARC alignment"
    },
    { "name": "Access Tokens" },
    {
      "name": "Settings",
      "description": "Runtime configuration for EmailEngine"
    },
    {
      "name": "Templates",
      "description": "Manage templates for sending emails",
      "externalDocs": {
        "description": "Documentation",
        "url": "https://emailengine.app/email-templates"
      }
    },
    { "name": "Logs" },
    { "name": "Stats" },
    { "name": "License" },
    { "name": "Webhooks" },
    {
      "name": "OAuth2 Applications",
      "externalDocs": {
        "description": "Documentation",
        "url": "https://emailengine.app/oauth2-configuration"
      }
    },
    { "name": "SMTP Gateway" },
    { "name": "Blocklists" },
    { "name": "Multi Message Actions" }
  ],
  "swagger": "2.0",
  "host": "127.0.0.1:5678",
  "schemes": ["http"],
  "paths": {
    "/v1/accounts": {
      "get": {
        "summary": "List accounts",
        "operationId": "getV1Accounts",
        "description": "Lists registered accounts",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "integer",
            "description": "Page number (zero indexed, so use 0 for first page)",
            "default": 0,
            "minimum": 0,
            "maximum": 1048576,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "How many entries per page",
            "default": 20,
            "minimum": 1,
            "maximum": 1000,
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter accounts by state",
            "enum": [
              "init",
              "syncing",
              "connecting",
              "connected",
              "authenticationError",
              "connectError",
              "unset",
              "disconnected"
            ],
            "name": "state",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Filter accounts by string match",
            "name": "query",
            "in": "query"
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AccountsFilterResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/autoconfig": {
      "get": {
        "summary": "Discover Email settings",
        "operationId": "getV1Autoconfig",
        "description": "Try to discover IMAP and SMTP settings for an email account",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Email address to discover email settings for",
            "x-format": { "email": true },
            "name": "email",
            "in": "query",
            "required": true
          }
        ],
        "tags": ["Settings"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DiscoveredEmailSettings" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/blocklists": {
      "get": {
        "summary": "List blocklists",
        "operationId": "getV1Blocklists",
        "description": "List blocklists with blocked addresses",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "integer",
            "description": "Page number (zero indexed, so use 0 for first page)",
            "default": 0,
            "minimum": 0,
            "maximum": 1048576,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "How many entries per page",
            "default": 20,
            "minimum": 1,
            "maximum": 1000,
            "name": "pageSize",
            "in": "query"
          }
        ],
        "tags": ["Blocklists"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/BlocklistsResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/changes": {
      "get": {
        "summary": "Stream state changes",
        "operationId": "getV1Changes",
        "description": "Stream account state changes as an EventSource",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          }
        ],
        "produces": ["text/event-stream"],
        "tags": ["Account"],
        "responses": {
          "default": {
            "schema": { "type": "string" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/gateways": {
      "get": {
        "summary": "List gateways",
        "operationId": "getV1Gateways",
        "description": "Lists registered gateways",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "integer",
            "description": "Page number (zero indexed, so use 0 for first page)",
            "default": 0,
            "minimum": 0,
            "maximum": 1048576,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "How many entries per page",
            "default": 20,
            "minimum": 1,
            "maximum": 1000,
            "name": "pageSize",
            "in": "query"
          }
        ],
        "tags": ["SMTP Gateway"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/GatewaysFilterResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/license": {
      "get": {
        "summary": "Request license info",
        "operationId": "getV1License",
        "description": "Get active license information",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          }
        ],
        "tags": ["License"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/LicenseResponse" },
            "description": "Successful"
          }
        }
      },
      "post": {
        "summary": "Register a license",
        "operationId": "postV1License",
        "description": "Set up a license for EmailEngine to unlock all features",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RegisterLicense" }
          }
        ],
        "tags": ["License"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/LicenseResponse" },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Remove license",
        "operationId": "deleteV1License",
        "description": "Remove registered active license",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          }
        ],
        "tags": ["License"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/EmptyLicenseResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/oauth2": {
      "get": {
        "summary": "List OAuth2 applications",
        "operationId": "getV1Oauth2",
        "description": "Lists registered OAuth2 applications",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "integer",
            "description": "Page number (zero indexed, so use 0 for first page)",
            "default": 0,
            "minimum": 0,
            "maximum": 1048576,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "How many entries per page",
            "default": 20,
            "minimum": 1,
            "maximum": 1000,
            "name": "pageSize",
            "in": "query"
          }
        ],
        "tags": ["OAuth2 Applications"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/OAuth2FilterResponse" },
            "description": "Successful"
          }
        }
      },
      "post": {
        "summary": "Register OAuth2 application",
        "operationId": "postV1Oauth2",
        "description": "Registers a new OAuth2 application for a specific provider",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/CreateOAuth2App" }
          }
        ],
        "tags": ["OAuth2 Applications"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/CreateAppResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/outbox": {
      "get": {
        "summary": "List queued messages",
        "operationId": "getV1Outbox",
        "description": "Lists messages in the Outbox",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "integer",
            "description": "Page number (zero indexed, so use 0 for first page)",
            "default": 0,
            "minimum": 0,
            "maximum": 1048576,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "How many entries per page",
            "default": 20,
            "minimum": 1,
            "maximum": 1000,
            "name": "pageSize",
            "in": "query"
          }
        ],
        "tags": ["Outbox"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/OutboxListResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/settings": {
      "get": {
        "summary": "List specific settings",
        "operationId": "getV1Settings",
        "description": "List setting values for specific keys",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "boolean",
            "default": false,
            "name": "eventTypes",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "webhooksEnabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "webhooks",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "webhookEvents",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "webhooksCustomHeaders",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "notifyHeaders",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "serviceUrl",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "notificationBaseUrl",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "trackSentMessages",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "trackClicks",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "trackOpens",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "imapIndexer",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "resolveGmailCategories",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "ignoreMailCertErrors",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "generateEmailSummary",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "generateRiskAssessment",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "openAiAPIKey",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "openAiModel",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "openAiAPIUrl",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "documentStoreChatModel",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "openAiTemperature",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "openAiTopP",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "openAiPrompt",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "openAiGenerateEmbeddings",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "inboxNewOnly",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "serviceSecret",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "authServer",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "proxyEnabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "proxyUrl",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "smtpEhloName",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "notifyText",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "notifyWebSafeHtml",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "notifyTextSize",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "notifyAttachments",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "notifyAttachmentSize",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "notifyCalendarEvents",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "gmailEnabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "gmailClientId",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "gmailClientSecret",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "gmailRedirectUrl",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "gmailExtraScopes",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "outlookEnabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "outlookClientId",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "outlookClientSecret",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "outlookRedirectUrl",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "outlookAuthority",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "outlookExtraScopes",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "mailRuEnabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "mailRuClientId",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "mailRuClientSecret",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "mailRuRedirectUrl",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "mailRuExtraScopes",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "serviceClient",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "serviceKey",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "serviceExtraScopes",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "logs",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "imapStrategy",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "smtpStrategy",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "localAddresses",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "smtpServerEnabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "smtpServerPort",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "smtpServerHost",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "smtpServerProxy",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "smtpServerAuthEnabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "smtpServerPassword",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "smtpServerTLSEnabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "imapProxyServerEnabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "imapProxyServerPort",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "imapProxyServerHost",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "imapProxyServerProxy",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "imapProxyServerPassword",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "imapProxyServerTLSEnabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "queueKeep",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "deliveryAttempts",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "templateHeader",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "templateHtmlHead",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "scriptEnv",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "enableApiProxy",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "documentStoreEnabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "documentStoreUrl",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "documentStoreIndex",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "documentStoreAuthEnabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "documentStoreUsername",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "documentStorePassword",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "documentStoreGenerateEmbeddings",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "documentStorePreProcessingEnabled",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "locale",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "timezone",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "pageBrandName",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "openAiPreProcessingFn",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "documentStorePreProcessingFn",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "documentStorePreProcessingMap",
            "in": "query"
          }
        ],
        "tags": ["Settings"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SettingsQueryResponse" },
            "description": "Successful"
          }
        }
      },
      "post": {
        "summary": "Set setting values",
        "operationId": "postV1Settings",
        "description": "Set setting values for specific keys",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Settings" }
          }
        ],
        "tags": ["Settings"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SettingsUpdatedResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/stats": {
      "get": {
        "summary": "Return server stats",
        "operationId": "getV1Stats",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "integer",
            "description": "Duration for counters",
            "default": 3600,
            "minimum": 0,
            "maximum": 604800,
            "name": "seconds",
            "in": "query"
          }
        ],
        "tags": ["Stats"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SettingsResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/templates": {
      "get": {
        "summary": "List account templates",
        "operationId": "getV1Templates",
        "description": "Lists stored templates for the account",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID to list the templates for",
            "maxLength": 256,
            "name": "account",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Page number (zero indexed, so use 0 for first page)",
            "default": 0,
            "minimum": 0,
            "maximum": 1048576,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "How many entries per page",
            "default": 20,
            "minimum": 1,
            "maximum": 1000,
            "name": "pageSize",
            "in": "query"
          }
        ],
        "tags": ["Templates"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AccountTemplatesResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/tokens": {
      "get": {
        "summary": "List root tokens",
        "operationId": "getV1Tokens",
        "description": "Lists access tokens registered for root access",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          }
        ],
        "tags": ["Access Tokens"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/RootTokensResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/webhookRoutes": {
      "get": {
        "summary": "List webhook routes",
        "operationId": "getV1Webhookroutes",
        "description": "List custom webhook routes",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "integer",
            "description": "Page number (zero indexed, so use 0 for first page)",
            "default": 0,
            "minimum": 0,
            "maximum": 1048576,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "How many entries per page",
            "default": 20,
            "minimum": 1,
            "maximum": 1000,
            "name": "pageSize",
            "in": "query"
          }
        ],
        "tags": ["Webhooks"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/WebhookRoutesListResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}": {
      "get": {
        "summary": "Get account info",
        "operationId": "getV1AccountAccount",
        "description": "Returns stored information about the account. Passwords are not included.",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "If true, then include quota information in the response",
            "default": false,
            "name": "quota",
            "in": "query"
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AccountResponse" },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Remove account",
        "operationId": "deleteV1AccountAccount",
        "description": "Stop processing and clear the account's cache",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeleteRequestResponse" },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "Update account info",
        "operationId": "putV1AccountAccount",
        "description": "Updates account information",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/UpdateAccount" }
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model15" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/blocklist/{listId}": {
      "get": {
        "summary": "List blocklist entries",
        "operationId": "getV1BlocklistListid",
        "description": "List blocked addresses for a list",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "List ID. Must use a subdomain name format. Lists are registered ad-hoc, so a new identifier defines a new list.",
            "x-format": { "hostname": true },
            "name": "listId",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Page number (zero indexed, so use 0 for first page)",
            "default": 0,
            "minimum": 0,
            "maximum": 1048576,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "How many entries per page",
            "default": 20,
            "minimum": 1,
            "maximum": 1000,
            "name": "pageSize",
            "in": "query"
          }
        ],
        "tags": ["Blocklists"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/BlocklistListResponse" },
            "description": "Successful"
          }
        }
      },
      "post": {
        "summary": "Add to blocklist",
        "operationId": "postV1BlocklistListid",
        "description": "Add an email address to a blocklist",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "List ID. Must use a subdomain name format. Lists are registered ad-hoc, so a new identifier defines a new list.",
            "x-format": { "hostname": true },
            "name": "listId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/BlocklistListAddPayload" }
          }
        ],
        "tags": ["Blocklists"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/BlocklistListAddResponse" },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Remove from blocklist",
        "operationId": "deleteV1BlocklistListid",
        "description": "Delete a blocked email address from a list",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "List ID. Must use a subdomain name format. Lists are registered ad-hoc, so a new identifier defines a new list.",
            "x-format": { "hostname": true },
            "name": "listId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Email address to remove from the list",
            "x-format": { "email": true },
            "name": "recipient",
            "in": "query",
            "required": true
          }
        ],
        "tags": ["Blocklists"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeleteBlocklistResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/gateway/{gateway}": {
      "get": {
        "summary": "Get gateway info",
        "operationId": "getV1GatewayGateway",
        "description": "Returns stored information about the gateway. Passwords are not included.",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Gateway ID",
            "maxLength": 256,
            "name": "gateway",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["SMTP Gateway"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/GatewayResponse" },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Remove SMTP gateway",
        "operationId": "deleteV1GatewayGateway",
        "description": "Delete SMTP gateway data",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Gateway ID",
            "maxLength": 256,
            "name": "gateway",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["SMTP Gateway"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model11" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/logs/{account}": {
      "get": {
        "summary": "Return IMAP logs for an account",
        "operationId": "getV1LogsAccount",
        "description": "Output is a downloadable text file",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["text/plain"],
        "tags": ["Logs"],
        "responses": {
          "default": {
            "schema": { "type": "string" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/oauth2/{app}": {
      "get": {
        "summary": "Get application info",
        "operationId": "getV1Oauth2App",
        "description": "Returns stored information about an OAuth2 application. Secrets are not included.",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "OAuth2 application ID",
            "maxLength": 256,
            "name": "app",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["OAuth2 Applications"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/ApplicationResponse" },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Remove OAuth2 application",
        "operationId": "deleteV1Oauth2App",
        "description": "Delete OAuth2 application data",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "OAuth2 application ID",
            "maxLength": 256,
            "name": "app",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["OAuth2 Applications"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeleteAppRequestResponse" },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "Update OAuth2 application",
        "operationId": "putV1Oauth2App",
        "description": "Updates OAuth2 application information",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "OAuth2 application ID",
            "maxLength": 256,
            "name": "app",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/UpdateOAuthApp" }
          }
        ],
        "tags": ["OAuth2 Applications"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UpdateOAuthAppResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/outbox/{queueId}": {
      "get": {
        "summary": "Get queued message",
        "operationId": "getV1OutboxQueueid",
        "description": "Gets a queued message in the Outbox",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Queue identifier for scheduled email",
            "maxLength": 100,
            "name": "queueId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["Outbox"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/OutboxEntry" },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Remove a message",
        "operationId": "deleteV1OutboxQueueid",
        "description": "Remove a message from the outbox",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Queue identifier for scheduled email",
            "maxLength": 100,
            "name": "queueId",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["Outbox"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeleteOutboxEntryResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/server-signatures": {
      "get": {
        "summary": "List Account Signatures",
        "operationId": "getV1AccountAccountServersignatures",
        "description": "Returns signatures associated with the account. Currently only Gmail is supported, and only \"new message\" signatures from the \"sendAs\" list are returned.",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AccountTokenResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/messages": {
      "get": {
        "summary": "List messages in a folder",
        "operationId": "getV1AccountAccountMessages",
        "description": "Lists messages in a mailbox folder",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Mailbox folder path. Can use special use labels like \"\\Sent\". Special value \"\\All\" is available for Gmail IMAP, Gmail API, MS Graph API accounts.",
            "name": "path",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Paging cursor from `nextPageCursor` or `prevPageCursor` value",
            "maxLength": 1048576,
            "x-convert": { "trim": true },
            "name": "cursor",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Page number (zero-indexed, so use 0 for the first page). Only supported for IMAP accounts. Deprecated; use the paging cursor instead. If the page cursor value is provided, then the page number value is ignored.",
            "default": 0,
            "minimum": 0,
            "maximum": 1048576,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "How many entries per page",
            "default": 20,
            "minimum": 1,
            "maximum": 1000,
            "name": "pageSize",
            "in": "query"
          }
        ],
        "tags": ["Message"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/MessageList" },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "Update messages",
        "operationId": "putV1AccountAccountMessages",
        "description": "Update message information for matching emails",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Mailbox folder path. Can use special use labels like \"\\Sent\". Special value \"\\All\" is available for Gmail IMAP, Gmail API, MS Graph API accounts.",
            "name": "path",
            "in": "query",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/MessagesUpdateRequest" }
          }
        ],
        "tags": ["Multi Message Actions"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/MessageUpdateResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/mailboxes": {
      "get": {
        "summary": "List mailboxes",
        "operationId": "getV1AccountAccountMailboxes",
        "description": "Lists all available mailboxes",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "If true, then includes message counters in the response",
            "default": false,
            "name": "counters",
            "in": "query"
          }
        ],
        "tags": ["Mailbox"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/MailboxesFilterResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/oauth-token": {
      "get": {
        "summary": "Get OAuth2 access token",
        "operationId": "getV1AccountAccountOauthtoken",
        "description": "Get the active OAuth2 access token for an account. NB! This endpoint is disabled by default and needs activation on the Service configuration page.",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model1" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/delivery-test/check/{deliveryTest}": {
      "get": {
        "summary": "Check test status",
        "operationId": "getV1DeliverytestCheckDeliverytest",
        "description": "Check delivery test status",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Test ID",
            "x-format": { "guid": { "version": ["uuidv4", "uuidv5"] } },
            "name": "deliveryTest",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["Delivery Test"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeliveryCheckResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/settings/queue/{queue}": {
      "get": {
        "summary": "Show queue information",
        "operationId": "getV1SettingsQueueQueue",
        "description": "Show queue status and current state",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Queue ID",
            "enum": ["notify", "submit", "documents"],
            "x-convert": { "trim": true },
            "name": "queue",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["Settings"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SettingsQueueResponse" },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "Set queue settings",
        "operationId": "putV1SettingsQueueQueue",
        "description": "Set queue settings",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Queue ID",
            "enum": ["notify", "submit", "documents"],
            "x-convert": { "trim": true },
            "name": "queue",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/SettingsPutQueuePayload" }
          }
        ],
        "tags": ["Settings"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SettingsPutQueueResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/templates/template/{template}": {
      "get": {
        "summary": "Get template information",
        "operationId": "getV1TemplatesTemplateTemplate",
        "description": "Retrieve template content and information",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Template ID",
            "maxLength": 256,
            "name": "template",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["Templates"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AccountTemplateResponse" },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Remove a template",
        "operationId": "deleteV1TemplatesTemplateTemplate",
        "description": "Delete a stored template",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Template ID",
            "maxLength": 256,
            "name": "template",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["Templates"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/Model12" },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "Update a template",
        "operationId": "putV1TemplatesTemplateTemplate",
        "description": "Update a stored template.",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Template ID",
            "maxLength": 256,
            "name": "template",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/UpdateTemplate" }
          }
        ],
        "tags": ["Templates"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UpdateTemplateResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/tokens/account/{account}": {
      "get": {
        "summary": "List account tokens",
        "operationId": "getV1TokensAccountAccount",
        "description": "Lists access tokens registered for an account",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["Access Tokens"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/AccountsTokensResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/webhookRoutes/webhookRoute/{webhookRoute}": {
      "get": {
        "summary": "Get webhook route information",
        "operationId": "getV1WebhookroutesWebhookrouteWebhookroute",
        "description": "Retrieve webhook route content and information",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Webhook ID",
            "maxLength": 256,
            "name": "webhookRoute",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["Webhooks"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/WebhookRouteResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/message/{message}": {
      "get": {
        "summary": "Get message information",
        "operationId": "getV1AccountAccountMessageMessage",
        "description": "Returns details of a specific message. By default text content is not included, use textType value to force retrieving text",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Message ID",
            "maxLength": 256,
            "name": "message",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Max length of text content",
            "minimum": 0,
            "maximum": 1073741824,
            "name": "maxBytes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Which text content to return, use * for all. By default text content is not returned.",
            "enum": ["html", "plain", "*"],
            "x-convert": { "case": "lower" },
            "name": "textType",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Shorthand option to fetch and preprocess HTML and inlined images. Overrides `textType`, `preProcessHtml`, and `preProcessHtml` options.",
            "default": false,
            "name": "webSafeHtml",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true, then fetches attached images and embeds these in the HTML as data URIs",
            "default": false,
            "name": "embedAttachedImages",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true, then pre-processes HTML for compatibility",
            "default": false,
            "name": "preProcessHtml",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "If true, then marks unseen email as seen while returning the message",
            "default": false,
            "name": "markAsSeen",
            "in": "query"
          }
        ],
        "tags": ["Message"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/MessageDetails" },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Delete message",
        "operationId": "deleteV1AccountAccountMessageMessage",
        "description": "Move message to Trash or delete it if already in Trash",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Message ID",
            "maxLength": 256,
            "name": "message",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Delete message even if not in Trash. Not supported for Gmail API accounts.",
            "default": false,
            "name": "force",
            "in": "query"
          }
        ],
        "tags": ["Message"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/MessageDeleteResponse" },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "Update message",
        "operationId": "putV1AccountAccountMessageMessage",
        "description": "Update message information. Mainly this means changing message flag values",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Message ID",
            "maxLength": 256,
            "name": "message",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/MessageUpdate" }
          }
        ],
        "tags": ["Message"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/MessageUpdateResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/attachment/{attachment}": {
      "get": {
        "summary": "Download attachment",
        "operationId": "getV1AccountAccountAttachmentAttachment",
        "description": "Fetches attachment file as a binary stream",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Attachment ID",
            "maxLength": 2048,
            "name": "attachment",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["application/octet-stream"],
        "tags": ["Message"],
        "responses": {
          "default": {
            "schema": { "type": "string" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/text/{text}": {
      "get": {
        "summary": "Retrieve message text",
        "operationId": "getV1AccountAccountTextText",
        "description": "Retrieves message text",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Message text ID",
            "maxLength": 10240,
            "name": "text",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "description": "Max length of text content",
            "minimum": 0,
            "maximum": 1073741824,
            "name": "maxBytes",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Which text content to return, use * for all. By default all contents are returned.",
            "default": "*",
            "enum": ["html", "plain", "*"],
            "x-convert": { "case": "lower" },
            "name": "textType",
            "in": "query"
          }
        ],
        "tags": ["Message"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/TextResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/message/{message}/source": {
      "get": {
        "summary": "Download raw message",
        "operationId": "getV1AccountAccountMessageMessageSource",
        "description": "Fetches raw message as a stream",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Message ID",
            "maxLength": 256,
            "name": "message",
            "in": "path",
            "required": true
          }
        ],
        "produces": ["message/rfc822"],
        "tags": ["Message"],
        "responses": {
          "default": {
            "schema": { "type": "string" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account": {
      "post": {
        "summary": "Register new account",
        "operationId": "postV1Account",
        "description": "Registers new IMAP account to be synced",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/CreateAccount" }
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/CreateAccountResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/gateway": {
      "post": {
        "summary": "Register new gateway",
        "operationId": "postV1Gateway",
        "description": "Registers a new SMP gateway",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/CreateGateway" }
          }
        ],
        "tags": ["SMTP Gateway"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/CreateGatewayResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/token": {
      "post": {
        "summary": "Provision an access token",
        "operationId": "postV1Token",
        "description": "Provisions a new access token for an account",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/CreateToken" }
          }
        ],
        "tags": ["Access Tokens"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/CreateTokenResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/verifyAccount": {
      "post": {
        "summary": "Verify IMAP and SMTP settings",
        "operationId": "postV1Verifyaccount",
        "description": "Checks if can connect and authenticate using provided account info",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/VerifyAccount" }
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/VerifyAccountResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/authentication/form": {
      "post": {
        "summary": "Generate authentication link",
        "operationId": "postV1AuthenticationForm",
        "description": "Generates a redirect link to the hosted authentication form",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RequestAuthForm" }
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/RequestAuthFormResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/templates/template": {
      "post": {
        "summary": "Create template",
        "operationId": "postV1TemplatesTemplate",
        "description": "Create a new stored template. Templates can be used when sending emails as the content of the message.",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/CreateTemplate" }
          }
        ],
        "tags": ["Templates"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/CreateTemplateResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/message": {
      "post": {
        "summary": "Upload message",
        "operationId": "postV1AccountAccountMessage",
        "description": "Upload a message structure, compile it into an EML file and store it into selected mailbox.",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/MessageUpload" }
          }
        ],
        "tags": ["Message"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/MessageUploadResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/mailbox": {
      "post": {
        "summary": "Create mailbox",
        "operationId": "postV1AccountAccountMailbox",
        "description": "Create new mailbox folder",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/CreateMailbox" }
          }
        ],
        "tags": ["Mailbox"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/CreateMailboxResponse" },
            "description": "Successful"
          }
        }
      },
      "delete": {
        "summary": "Delete mailbox",
        "operationId": "deleteV1AccountAccountMailbox",
        "description": "Delete existing mailbox folder",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Mailbox folder path to delete",
            "name": "path",
            "in": "query",
            "required": true
          }
        ],
        "tags": ["Mailbox"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeleteMailboxResponse" },
            "description": "Successful"
          }
        }
      },
      "put": {
        "summary": "Rename mailbox",
        "operationId": "putV1AccountAccountMailbox",
        "description": "Rename an existing mailbox folder",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RenameMailbox" }
          }
        ],
        "tags": ["Mailbox"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/RenameMailboxResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/search": {
      "post": {
        "summary": "Search for messages",
        "operationId": "postV1AccountAccountSearch",
        "description": "Filter messages from a mailbox folder by search options. Search is performed against a specific folder and not for the entire account.",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Mailbox folder path. Can use special use labels like \"\\Sent\". Special value \"\\All\" is available for Gmail IMAP, Gmail API, MS Graph API accounts.",
            "name": "path",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Paging cursor from `nextPageCursor` or `prevPageCursor` value",
            "maxLength": 1048576,
            "x-convert": { "trim": true },
            "name": "cursor",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Page number (zero-indexed, so use 0 for the first page). Only supported for IMAP accounts. Deprecated; use the paging cursor instead. If the page cursor value is provided, then the page number value is ignored.",
            "default": 0,
            "minimum": 0,
            "maximum": 1048576,
            "name": "page",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "How many entries per page",
            "default": 20,
            "minimum": 1,
            "maximum": 1000,
            "name": "pageSize",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "MS Graph only. If enabled, uses the $search parameter for MS Graph search queries instead of $filter. This allows searching the \"to\", \"cc\", \"bcc\", \"larger\", \"smaller\", \"body\", \"before\", \"sentBefore\", \"since\", and the \"sentSince\" fields. Note that $search returns up to 1,000 results, does not indicate the total number of matching results or pages, and returns results sorted by relevance rather than date.",
            "name": "useOutlookSearch",
            "in": "query",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/Model7" }
          }
        ],
        "tags": ["Message"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/MessageList" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/submit": {
      "post": {
        "summary": "Submit message for delivery",
        "operationId": "postV1AccountAccountSubmit",
        "description": "Submit message for delivery. If reference message ID is provided then EmailEngine adds all headers and flags required for a reply/forward automatically.",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/SubmitMessage" }
          }
        ],
        "tags": ["Submit"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/SubmitMessageResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/delivery-test/account/{account}": {
      "post": {
        "summary": "Create delivery test",
        "operationId": "postV1DeliverytestAccountAccount",
        "description": "Initiate a delivery test",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/DeliveryStartRequest" }
          }
        ],
        "tags": ["Delivery Test"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeliveryStartResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/token/{token}": {
      "delete": {
        "summary": "Remove a token",
        "operationId": "deleteV1TokenToken",
        "description": "Delete an access token",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Access token",
            "x-constraint": { "length": 64 },
            "x-format": { "hex": { "byteAligned": false, "prefix": false } },
            "name": "token",
            "in": "path",
            "required": true
          }
        ],
        "tags": ["Access Tokens"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeleteTokenRequestResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/templates/account/{account}": {
      "delete": {
        "summary": "Flush templates",
        "operationId": "deleteV1TemplatesAccountAccount",
        "description": "Delete all stored templates for an account",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Must be true in order to flush templates",
            "default": false,
            "enum": [true],
            "name": "force",
            "in": "query"
          }
        ],
        "tags": ["Templates"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/DeleteTemplateRequestResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/sync": {
      "put": {
        "summary": "Request syncing",
        "operationId": "putV1AccountAccountSync",
        "description": "Immediately trigger account syncing for IMAP accounts",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RequestSync" }
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/RequestSyncResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/reconnect": {
      "put": {
        "summary": "Request reconnect",
        "operationId": "putV1AccountAccountReconnect",
        "description": "Requests connection to be reconnected",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RequestReconnect" }
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/RequestReconnectResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/flush": {
      "put": {
        "summary": "Request account flush",
        "operationId": "putV1AccountAccountFlush",
        "description": "Deletes all email indexes from Redis and ElasticSearch and re-creates the index for that account. You can only run a single flush operation at a time, so you must wait until the previous flush has finished before initiating a new one.",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/RequestFlush" }
          }
        ],
        "tags": ["Account"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/RequestFlushResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/gateway/edit/{gateway}": {
      "put": {
        "summary": "Update gateway info",
        "operationId": "putV1GatewayEditGateway",
        "description": "Updates gateway information",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Gateway ID",
            "maxLength": 256,
            "name": "gateway",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/UpdateGateway" }
          }
        ],
        "tags": ["SMTP Gateway"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/UpdateGatewayResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/messages/move": {
      "put": {
        "summary": "Move messages",
        "operationId": "putV1AccountAccountMessagesMove",
        "description": "Move messages matching to a search query to another folder",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Mailbox folder path. Can use special use labels like \"\\Sent\". Special value \"\\All\" is available for Gmail IMAP, Gmail API, MS Graph API accounts.",
            "name": "path",
            "in": "query",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/MessagesMoveRequest" }
          }
        ],
        "tags": ["Multi Message Actions"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/MessagesMoveResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/messages/delete": {
      "put": {
        "summary": "Delete messages",
        "operationId": "putV1AccountAccountMessagesDelete",
        "description": "Move messages to Trash or delete these if already in Trash",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Mailbox folder path. Can use special use labels like \"\\Sent\". Special value \"\\All\" is available for Gmail IMAP, Gmail API, MS Graph API accounts.",
            "name": "path",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Delete messages even if not in Trash",
            "default": false,
            "name": "force",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/MessagesDeleteRequest" }
          }
        ],
        "tags": ["Multi Message Actions"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/MessagesDeleteResponse" },
            "description": "Successful"
          }
        }
      }
    },
    "/v1/account/{account}/message/{message}/move": {
      "put": {
        "summary": "Move a message to a specified folder",
        "operationId": "putV1AccountAccountMessageMessageMove",
        "description": "Moves a message to a target folder",
        "parameters": [
          {
            "type": "integer",
            "description": "Override the `EENGINE_TIMEOUT` environment variable for a single API request (in milliseconds)",
            "minimum": 0,
            "maximum": 7200000,
            "name": "x-ee-timeout",
            "in": "header",
            "required": false
          },
          {
            "type": "string",
            "description": "Account ID",
            "maxLength": 256,
            "x-convert": { "trim": true },
            "name": "account",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Message ID",
            "maxLength": 256,
            "name": "message",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": { "$ref": "#/definitions/MessageMove" }
          }
        ],
        "tags": ["Message"],
        "responses": {
          "200": {
            "schema": { "$ref": "#/definitions/MessageMoveResponse" },
            "description": "Successful"
          }
        }
      }
    }
  },
  "definitions": {
    "type": {
      "type": "string",
      "description": "Account type",
      "example": "outlook",
      "enum": ["imap", "gmail", "gmailService", "outlook", "mailRu", "oauth2"]
    },
    "state": {
      "type": "string",
      "description": "Account state",
      "example": "connected",
      "enum": [
        "init",
        "syncing",
        "connecting",
        "connected",
        "authenticationError",
        "connectError",
        "unset",
        "disconnected"
      ]
    },
    "AccountCountersEvents": {
      "type": "object",
      "description": "Lifetime event counters",
      "example": { "messageNew": 30, "messageDeleted": 5 }
    },
    "AccountCounters": {
      "type": "object",
      "properties": {
        "events": { "$ref": "#/definitions/AccountCountersEvents" }
      }
    },
    "grant": {
      "type": "string",
      "description": "Requested grant type",
      "example": "refresh_token",
      "enum": ["refresh_token", "authorization_code"]
    },
    "OauthScopes": {
      "type": "array",
      "description": "List of requested OAuth2 scopes",
      "items": {
        "type": "string",
        "description": "OAuth2 scope",
        "example": "https://mail.google.com/"
      }
    },
    "response": {
      "type": "object",
      "description": "Server response",
      "example": {
        "error": "invalid_grant",
        "error_description": "Bad Request"
      }
    },
    "tokenRequest": {
      "type": "object",
      "description": "Information about the OAuth2 token request that failed",
      "properties": {
        "grant": { "$ref": "#/definitions/grant" },
        "provider": {
          "type": "string",
          "description": "OAuth2 provider",
          "example": "gmail",
          "maxLength": 256
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for the OAuth2 request",
          "example": 400
        },
        "clientId": {
          "type": "string",
          "description": "OAuth2 client ID used to authenticate this request",
          "example": "1023289917884-h3nu00e9cb7h252e24c23sv19l8k57ah.apps.googleusercontent.com"
        },
        "scopes": { "$ref": "#/definitions/OauthScopes" },
        "response": { "$ref": "#/definitions/response" }
      }
    },
    "AccountErrorEntry": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string",
          "description": "Error message from EmailEngine",
          "example": "Token request failed"
        },
        "serverResponseCode": {
          "type": "string",
          "description": "Server response code or error identifier",
          "example": "OauthRenewError"
        },
        "tokenRequest": { "$ref": "#/definitions/tokenRequest" }
      }
    },
    "AccountResponseItem": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "name": {
          "type": "string",
          "description": "Display name for the account",
          "example": "My Email Account",
          "maxLength": 256
        },
        "email": {
          "type": "string",
          "description": "Default email address of the account",
          "example": "user@example.com",
          "x-format": { "email": true }
        },
        "type": { "$ref": "#/definitions/type" },
        "app": {
          "type": "string",
          "description": "OAuth2 application ID",
          "example": "AAABhaBPHscAAAAH",
          "maxLength": 256
        },
        "state": { "$ref": "#/definitions/state" },
        "webhooks": {
          "type": "string",
          "description": "Account-specific webhook URL",
          "example": "https://myservice.com/imap/webhooks",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "proxy": {
          "type": "string",
          "description": "Proxy URL",
          "example": "socks://proxy.example.com:1080",
          "x-format": {
            "uri": {
              "scheme": ["http", "https", "socks", "socks4", "socks5"],
              "allowRelative": false
            }
          }
        },
        "smtpEhloName": {
          "type": "string",
          "description": "Hostname to use for the SMTP EHLO/HELO greeting",
          "example": "my.proxy.tld",
          "x-format": { "hostname": true }
        },
        "counters": { "$ref": "#/definitions/AccountCounters" },
        "syncTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last sync time",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "lastError": { "$ref": "#/definitions/AccountErrorEntry" }
      },
      "required": ["account", "type", "state"]
    },
    "AccountEntries": {
      "type": "array",
      "items": { "$ref": "#/definitions/AccountResponseItem" }
    },
    "AccountsFilterResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "description": "How many matching entries",
          "example": 120
        },
        "page": {
          "type": "integer",
          "description": "Current page (0-based index)",
          "example": 0
        },
        "pages": {
          "type": "integer",
          "description": "Total page count",
          "example": 24
        },
        "accounts": { "$ref": "#/definitions/AccountEntries" }
      }
    },
    "DetectedAuthenticationInfo": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "description": "Account username",
          "example": "myuser@gmail.com",
          "maxLength": 256
        }
      }
    },
    "ResolvedServerSettings": {
      "type": "object",
      "properties": {
        "auth": { "$ref": "#/definitions/DetectedAuthenticationInfo" },
        "host": {
          "type": "string",
          "description": "Hostname to connect to",
          "example": "imap.gmail.com",
          "x-format": { "hostname": true }
        },
        "port": {
          "type": "integer",
          "description": "Service port number",
          "example": 993,
          "minimum": 1,
          "maximum": 65536
        },
        "secure": {
          "type": "boolean",
          "description": "Should connection use TLS. Usually true for port 993",
          "example": true,
          "default": false
        }
      },
      "required": ["host", "port"]
    },
    "DiscoveredServerSettings": {
      "type": "object",
      "properties": {
        "auth": { "$ref": "#/definitions/DetectedAuthenticationInfo" },
        "host": {
          "type": "string",
          "description": "Hostname to connect to",
          "example": "imap.gmail.com",
          "x-format": { "hostname": true }
        },
        "port": {
          "type": "integer",
          "description": "Service port number",
          "example": 993,
          "minimum": 1,
          "maximum": 65536
        },
        "secure": {
          "type": "boolean",
          "description": "Should connection use TLS. Usually true for port 993",
          "example": true,
          "default": false
        }
      },
      "required": ["host", "port"]
    },
    "DiscoveredEmailSettings": {
      "type": "object",
      "properties": {
        "imap": { "$ref": "#/definitions/ResolvedServerSettings" },
        "smtp": { "$ref": "#/definitions/DiscoveredServerSettings" },
        "_source": {
          "type": "string",
          "description": "Source for the detected info",
          "example": "srv"
        }
      }
    },
    "BlocklistsResponseItem": {
      "type": "object",
      "properties": {
        "listId": {
          "type": "string",
          "description": "List ID",
          "example": "example",
          "maxLength": 256
        },
        "count": {
          "type": "integer",
          "description": "Count of blocked addresses in this list",
          "example": 12
        }
      },
      "required": ["listId"]
    },
    "BlocklistsEntries": {
      "type": "array",
      "items": { "$ref": "#/definitions/BlocklistsResponseItem" }
    },
    "BlocklistsResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "description": "How many matching entries",
          "example": 120
        },
        "page": {
          "type": "integer",
          "description": "Current page (0-based index)",
          "example": 0
        },
        "pages": {
          "type": "integer",
          "description": "Total page count",
          "example": 24
        },
        "blocklists": { "$ref": "#/definitions/BlocklistsEntries" }
      }
    },
    "GatewayResponseItem": {
      "type": "object",
      "properties": {
        "gateway": {
          "type": "string",
          "description": "Gateway ID",
          "example": "example",
          "maxLength": 256
        },
        "name": {
          "type": "string",
          "description": "Display name for the gateway",
          "example": "My Email Gateway",
          "maxLength": 256
        },
        "deliveries": {
          "type": "integer",
          "description": "Count of email deliveries using this gateway",
          "example": 100
        },
        "lastUse": {
          "type": "string",
          "format": "date-time",
          "description": "Last delivery time",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "lastError": { "$ref": "#/definitions/AccountErrorEntry" }
      },
      "required": ["gateway"]
    },
    "GatewayEntries": {
      "type": "array",
      "items": { "$ref": "#/definitions/GatewayResponseItem" }
    },
    "GatewaysFilterResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "description": "How many matching entries",
          "example": 120
        },
        "page": {
          "type": "integer",
          "description": "Current page (0-based index)",
          "example": 0
        },
        "pages": {
          "type": "integer",
          "description": "Total page count",
          "example": 24
        },
        "gateways": { "$ref": "#/definitions/GatewayEntries" }
      }
    },
    "LicenseDetails": {
      "type": "object",
      "enum": [false],
      "properties": {
        "application": {
          "type": "string",
          "description": "Application associated with the license",
          "example": "@postalsys/emailengine-app"
        },
        "key": {
          "type": "string",
          "description": "License key",
          "example": "1edf01e35e75ed3425808eba",
          "x-format": { "hex": { "byteAligned": false, "prefix": false } }
        },
        "licensedTo": {
          "type": "string",
          "description": "Entity the license is issued to",
          "example": "Kreata OÜ"
        },
        "hostname": {
          "type": "string",
          "description": "Hostname or environment this license applies to",
          "example": "emailengine.example.com"
        },
        "created": {
          "type": "string",
          "format": "date",
          "description": "Time the license was provisioned",
          "example": "2021-10-13T07:47:42.695Z"
        }
      }
    },
    "LicenseResponse": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "description": "Indicates whether an active license is registered",
          "example": true
        },
        "type": {
          "type": "string",
          "description": "Type of the active license",
          "example": "EmailEngine License"
        },
        "details": { "$ref": "#/definitions/LicenseDetails" },
        "suspended": {
          "type": "boolean",
          "description": "Indicates whether email connections are suspended due to licensing issues",
          "example": false
        }
      }
    },
    "OAuth2Provider": {
      "type": "string",
      "description": "OAuth2 provider",
      "example": "gmail",
      "enum": ["gmail", "gmailService", "outlook", "mailRu"]
    },
    "googleProjectId": {
      "type": "string",
      "description": "Google Cloud Project ID",
      "example": "project-name-425411",
      "enum": [false],
      "maxLength": 256,
      "x-convert": { "trim": true }
    },
    "OAuth2ResponseItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "OAuth2 application ID",
          "example": "AAABhaBPHscAAAAH",
          "maxLength": 256
        },
        "name": {
          "type": "string",
          "description": "Display name for the app",
          "example": "My OAuth2 App",
          "maxLength": 256
        },
        "description": {
          "type": "string",
          "description": "OAuth2 application description",
          "example": "App description",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "title": {
          "type": "string",
          "description": "Title for the application button",
          "example": "App title",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "provider": { "$ref": "#/definitions/OAuth2Provider" },
        "enabled": {
          "type": "boolean",
          "description": "Is the application enabled",
          "example": true
        },
        "legacy": {
          "type": "boolean",
          "description": "`true` for older OAuth2 apps set via the settings endpoint",
          "example": true
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time this entry was added",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The time this entry was updated",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "includeInListing": {
          "type": "boolean",
          "description": "Is the application listed in the hosted authentication form",
          "example": true
        },
        "clientId": {
          "type": "string",
          "description": "Client or Application ID for 3-legged OAuth2 applications",
          "example": "4f05f488-d858-4f2c-bd12-1039062612fe"
        },
        "clientSecret": {
          "type": "string",
          "description": "Client secret for 3-legged OAuth2 applications. Actual value is not revealed.",
          "example": "******"
        },
        "authority": {
          "type": "string",
          "description": "Authorization tenant value for Outlook OAuth2 applications",
          "example": "common"
        },
        "redirectUrl": {
          "type": "string",
          "description": "Redirect URL for 3-legged OAuth2 applications",
          "example": "https://myservice.com/oauth",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "serviceClient": {
          "type": "string",
          "description": "Service client ID for 2-legged OAuth2 applications",
          "example": "9103965568215821627203"
        },
        "googleProjectId": { "$ref": "#/definitions/googleProjectId" },
        "googleWorkspaceAccounts": {
          "type": "boolean",
          "description": "Show only Google Workspace accounts on the OAuth2 login page",
          "example": false
        },
        "serviceClientEmail": {
          "type": "string",
          "description": "Service Client Email for 2-legged OAuth2 applications",
          "example": "name@project-123.iam.gserviceaccount.com",
          "x-format": { "email": true }
        },
        "serviceKey": {
          "type": "string",
          "description": "PEM formatted service secret for 2-legged OAuth2 applications. Actual value is not revealed.",
          "example": "******"
        },
        "lastError": { "$ref": "#/definitions/AccountErrorEntry" }
      },
      "required": ["id", "provider", "created"]
    },
    "OAuth2Entries": {
      "type": "array",
      "items": { "$ref": "#/definitions/OAuth2ResponseItem" }
    },
    "OAuth2FilterResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "description": "How many matching entries",
          "example": 120
        },
        "page": {
          "type": "integer",
          "description": "Current page (0-based index)",
          "example": 0
        },
        "pages": {
          "type": "integer",
          "description": "Total page count",
          "example": 24
        },
        "apps": { "$ref": "#/definitions/OAuth2Entries" }
      }
    },
    "source": {
      "type": "string",
      "description": "How this message was added to the queue",
      "example": "smtp",
      "enum": ["smtp", "api"]
    },
    "to": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "recipient@example.com",
        "x-format": { "email": true }
      }
    },
    "envelope": {
      "type": "object",
      "description": "SMTP envelope",
      "properties": {
        "from": {
          "type": "string",
          "example": "sender@example.com",
          "x-format": { "email": true }
        },
        "to": { "$ref": "#/definitions/to" }
      }
    },
    "status": {
      "type": "string",
      "description": "Current state of the sending",
      "example": "queued",
      "enum": ["queued", "processing", "submitted", "error"]
    },
    "OutboxListProgressError": {
      "type": "object",
      "description": "Error information if status is \"error\"",
      "properties": {
        "message": {
          "type": "string",
          "description": "Error message",
          "example": "Authentication failed"
        },
        "code": {
          "type": "string",
          "description": "Error code",
          "example": "EAUTH"
        },
        "statusCode": {
          "type": "string",
          "description": "SMTP response code",
          "example": 502
        }
      }
    },
    "OutboxEntryProgress": {
      "type": "object",
      "properties": {
        "status": { "$ref": "#/definitions/status" },
        "response": {
          "type": "string",
          "description": "Response from the SMTP server. Only if status is \"processing\"",
          "example": "250 Message Accepted"
        },
        "error": { "$ref": "#/definitions/OutboxListProgressError" }
      }
    },
    "OutboxEntry": {
      "type": "object",
      "properties": {
        "queueId": {
          "type": "string",
          "description": "Outbox queue ID",
          "example": "1869c5692565f756b33"
        },
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "source": { "$ref": "#/definitions/source" },
        "messageId": {
          "type": "string",
          "description": "Message ID",
          "example": "<test123@example.com>",
          "maxLength": 996
        },
        "envelope": { "$ref": "#/definitions/envelope" },
        "subject": {
          "type": "string",
          "description": "Message subject",
          "example": "What a wonderful message",
          "maxLength": 10240
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time this message was queued",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "scheduled": {
          "type": "string",
          "format": "date-time",
          "description": "When this message is supposed to be delivered",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "nextAttempt": {
          "type": "string",
          "format": "date-time",
          "description": "Next delivery attempt",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "attemptsMade": {
          "type": "integer",
          "description": "How many times EmailEngine has tried to deliver this email",
          "example": 3
        },
        "attempts": {
          "type": "integer",
          "description": "How many delivery attempts to make until message is considered as failed",
          "example": 3
        },
        "progress": { "$ref": "#/definitions/OutboxEntryProgress" }
      },
      "required": ["account"]
    },
    "OutboxListEntries": {
      "type": "array",
      "items": { "$ref": "#/definitions/OutboxEntry" }
    },
    "OutboxListResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "description": "How many matching entries",
          "example": 120
        },
        "page": {
          "type": "integer",
          "description": "Current page (0-based index)",
          "example": 0
        },
        "pages": {
          "type": "integer",
          "description": "Total page count",
          "example": 24
        },
        "messages": { "$ref": "#/definitions/OutboxListEntries" }
      }
    },
    "webhookEvents": {
      "type": "array",
      "description": "List of webhook events to subscribe to",
      "items": { "type": "string", "example": "messageNew", "maxLength": 256 }
    },
    "WebhooksCustomHeader": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "example": "Authorization",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "value": {
          "type": "string",
          "example": "Bearer <secret-token>",
          "default": "",
          "maxLength": 10240,
          "x-convert": { "trim": true }
        }
      },
      "required": ["key"]
    },
    "WebhooksCustomHeaders": {
      "type": "array",
      "description": "Custom HTTP headers added to webhook requests",
      "items": { "$ref": "#/definitions/WebhooksCustomHeader" }
    },
    "notifyHeaders": {
      "type": "array",
      "description": "List of additional email headers to include in webhook notifications",
      "items": { "type": "string", "example": "List-ID", "maxLength": 256 }
    },
    "imapIndexer": {
      "type": "string",
      "description": "Sets the indexing method for IMAP accounts. Choose \"full\" to build a complete index that tracks deleted and updated emails, or \"fast\" to only detect newly received emails",
      "example": "full",
      "enum": ["full", "fast"],
      "x-convert": { "trim": true }
    },
    "LogSettings": {
      "type": "object",
      "properties": {
        "all": {
          "type": "boolean",
          "description": "Enable logs for all accounts",
          "example": false,
          "default": false
        },
        "maxLogLines": {
          "type": "integer",
          "description": "Maximum number of log lines to keep",
          "default": 10000,
          "minimum": 0,
          "maximum": 1000000
        }
      }
    },
    "imapStrategy": {
      "type": "string",
      "description": "How to select local IP address for IMAP connections",
      "enum": ["default", "dedicated", "random"]
    },
    "smtpStrategy": {
      "type": "string",
      "description": "How to select local IP address for SMTP connections",
      "enum": ["default", "dedicated", "random"]
    },
    "localAddresses": {
      "type": "array",
      "description": "A list of pooled local IP addresses that can be used for IMAP and SMTP connections",
      "x-constraint": { "single": true },
      "items": {
        "type": "string",
        "x-format": {
          "ip": { "cidr": "forbidden", "version": ["ipv4", "ipv6"] }
        }
      }
    },
    "locale": {
      "type": "string",
      "description": "Default locale identifier",
      "example": "fr",
      "enum": ["en", "et", "fr", "de", "pl", "ja"],
      "maxLength": 100
    },
    "SettingsQueryResponse": {
      "type": "object",
      "properties": {
        "webhooksEnabled": {
          "type": "boolean",
          "description": "If set to false, webhooks will not be emitted"
        },
        "webhooks": {
          "type": "string",
          "description": "The URL where webhooks will be sent",
          "example": "https://myservice.com/imap/webhooks",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "webhookEvents": { "$ref": "#/definitions/webhookEvents" },
        "webhooksCustomHeaders": {
          "$ref": "#/definitions/WebhooksCustomHeaders"
        },
        "notifyHeaders": { "$ref": "#/definitions/notifyHeaders" },
        "serviceUrl": {
          "type": "string",
          "description": "The base URL of the EmailEngine service. If path is also provided then it is ignored.",
          "example": "https://emailengine.example.com",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "notificationBaseUrl": {
          "type": "string",
          "description": "Base URL of EmailEngine for receiving external notifications like MS Graph webhooks. Can contain a path value. Defaults to `serviceUrl` if not set.",
          "example": "https://emailengine.example.com",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "trackClicks": {
          "type": "boolean",
          "description": "If true, rewrites HTML links in sent emails to track link clicks"
        },
        "trackOpens": {
          "type": "boolean",
          "description": "If true, inserts a tracking beacon image in HTML emails to monitor email opens"
        },
        "imapIndexer": { "$ref": "#/definitions/imapIndexer" },
        "resolveGmailCategories": {
          "type": "boolean",
          "description": "Enables Gmail category tab detection for incoming emails when set to true. Applies only to Gmail IMAP accounts; Gmail API accounts automatically include category information"
        },
        "ignoreMailCertErrors": {
          "type": "boolean",
          "description": "If true, allows connections to servers with insecure or untrusted SSL/TLS certificates. Applies to both IMAP and SMTP connections. Use with caution"
        },
        "generateEmailSummary": {
          "type": "boolean",
          "description": "If true, generates a summary of the email using OpenAI ChatGPT"
        },
        "openAiAPIKey": {
          "type": "string",
          "description": "OpenAI API key",
          "example": "verysecret"
        },
        "openAiModel": {
          "type": "string",
          "description": "OpenAI API model",
          "example": "gpt-3.5-turbo"
        },
        "openAiAPIUrl": {
          "type": "string",
          "description": "OpenAI API URL",
          "example": "https://api.openai.com",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "documentStoreChatModel": {
          "type": "string",
          "description": "OpenAI API model for chat",
          "example": "gpt-3.5-turbo"
        },
        "openAiTemperature": {
          "type": "number",
          "description": "Controls the randomness of the OpenAI API responses. Higher values (up to 2) make output more random, while lower values make it more focused and deterministic",
          "example": 0.8,
          "minimum": 0,
          "maximum": 2
        },
        "openAiTopP": {
          "type": "number",
          "description": "Controls the cumulative probability for nucleus sampling in the OpenAI API. A value between 0 and 1",
          "example": 0.1,
          "minimum": 0,
          "maximum": 1
        },
        "openAiPrompt": {
          "type": "string",
          "description": "Prompt to send to the LLM for analyzing emails",
          "example": "You are an assistant scanning incoming emails...",
          "maxLength": 6144
        },
        "openAiGenerateEmbeddings": {
          "type": "boolean",
          "description": "If true, generates vector embeddings for the email"
        },
        "inboxNewOnly": {
          "type": "boolean",
          "description": "If true, sends \"New Email\" webhooks for incoming emails only"
        },
        "serviceSecret": {
          "type": "string",
          "description": "HMAC secret for signing public requests",
          "example": "verysecret"
        },
        "authServer": {
          "type": "string",
          "description": "The URL of the authentication server to fetch authentication data from",
          "example": "https://myservice.com/authentication",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "proxyEnabled": {
          "type": "boolean",
          "description": "If true, the global proxy is enabled"
        },
        "proxyUrl": {
          "type": "string",
          "description": "Proxy URL",
          "example": "socks://proxy.example.com:1080",
          "x-format": {
            "uri": {
              "scheme": ["http", "https", "socks", "socks4", "socks5"],
              "allowRelative": false
            }
          }
        },
        "smtpEhloName": {
          "type": "string",
          "description": "Hostname to use for the SMTP EHLO/HELO greeting",
          "example": "my.proxy.tld",
          "x-format": { "hostname": true }
        },
        "notifyText": {
          "type": "boolean",
          "description": "Include message text in webhook notifications"
        },
        "notifyWebSafeHtml": {
          "type": "boolean",
          "description": "Pre-process HTML in webhook notifications to be web-safe"
        },
        "notifyTextSize": {
          "type": "integer",
          "description": "Maximum size of message text to include in webhook notifications (in bytes)",
          "minimum": 0
        },
        "notifyAttachments": {
          "type": "boolean",
          "description": "Include attachments in webhook notifications"
        },
        "notifyAttachmentSize": {
          "type": "integer",
          "description": "Maximum size of attachment to include in webhook notifications (in bytes)",
          "minimum": 0
        },
        "notifyCalendarEvents": {
          "type": "boolean",
          "description": "Include calendar events in webhook notifications"
        },
        "logs": { "$ref": "#/definitions/LogSettings" },
        "imapStrategy": { "$ref": "#/definitions/imapStrategy" },
        "smtpStrategy": { "$ref": "#/definitions/smtpStrategy" },
        "localAddresses": { "$ref": "#/definitions/localAddresses" },
        "smtpServerEnabled": {
          "type": "boolean",
          "description": "Enable SMTP interface"
        },
        "smtpServerPort": {
          "type": "integer",
          "description": "SMTP interface port",
          "minimum": 0,
          "maximum": 65536
        },
        "smtpServerHost": {
          "type": "string",
          "description": "SMTP host to bind to",
          "x-format": {
            "ip": { "cidr": "forbidden", "version": ["ipv4", "ipv6"] }
          }
        },
        "smtpServerProxy": {
          "type": "boolean",
          "description": "Enable PROXY protocol for SMTP server"
        },
        "smtpServerAuthEnabled": {
          "type": "boolean",
          "description": "Enable SMTP authentication"
        },
        "smtpServerPassword": {
          "type": "string",
          "description": "SMTP client password. Set to `null` to disable",
          "maxLength": 1024
        },
        "smtpServerTLSEnabled": {
          "type": "boolean",
          "description": "Enable TLS for the SMTP interface. Requires a valid certificate"
        },
        "imapProxyServerEnabled": {
          "type": "boolean",
          "description": "Enable IMAP proxy interface"
        },
        "imapProxyServerPort": {
          "type": "integer",
          "description": "IMAP proxy interface port",
          "minimum": 0,
          "maximum": 65536
        },
        "imapProxyServerHost": {
          "type": "string",
          "description": "IMAP proxy host to bind to",
          "x-format": {
            "ip": { "cidr": "forbidden", "version": ["ipv4", "ipv6"] }
          }
        },
        "imapProxyServerProxy": {
          "type": "boolean",
          "description": "Enable PROXY protocol for the IMAP proxy server"
        },
        "imapProxyServerPassword": {
          "type": "string",
          "description": "IMAP proxy client password. Set to `null` to disable",
          "maxLength": 1024
        },
        "imapProxyServerTLSEnabled": {
          "type": "boolean",
          "description": "Enable TLS for the IMAP proxy interface. Requires a valid certificate"
        },
        "queueKeep": {
          "type": "integer",
          "description": "Number of completed or failed queue entries to keep",
          "minimum": 0
        },
        "deliveryAttempts": {
          "type": "integer",
          "description": "Number of times to retry sending an email before it is considered as failed",
          "minimum": 0
        },
        "templateHeader": {
          "type": "string",
          "description": "HTML code displayed at the top of public pages like the hosted authentication form",
          "maxLength": 1048576,
          "x-convert": { "trim": true }
        },
        "templateHtmlHead": {
          "type": "string",
          "description": "HTML code added to the HEAD tag of public pages like the hosted authentication form",
          "maxLength": 1048576,
          "x-convert": { "trim": true }
        },
        "scriptEnv": {
          "type": "string",
          "description": "JSON object to be used as the `env` variable in pre-processing scripts",
          "example": "{\"key\": \"value\"}",
          "maxLength": 1048576,
          "x-convert": { "trim": true }
        },
        "enableApiProxy": {
          "type": "boolean",
          "description": "Enable support for reverse proxies"
        },
        "locale": { "$ref": "#/definitions/locale" },
        "timezone": {
          "type": "string",
          "description": "Default timezone identifier",
          "example": "Europe/Tallinn",
          "maxLength": 100
        },
        "pageBrandName": {
          "type": "string",
          "description": "Brand name to use in the HTML title element",
          "example": "EmailEngine",
          "maxLength": 1024
        },
        "openAiPreProcessingFn": {
          "type": "string",
          "description": "Filter function for LLM pre-processing (JavaScript)",
          "example": "return true; // passes all emails",
          "maxLength": 524288
        }
      }
    },
    "ConnectionsStats": {
      "type": "object",
      "description": "Counts of accounts in different connection states",
      "properties": {
        "init": {
          "type": "integer",
          "description": "Accounts not yet initialized",
          "example": 2
        },
        "connected": {
          "type": "integer",
          "description": "Successfully connected accounts",
          "example": 8
        },
        "connecting": {
          "type": "integer",
          "description": "Connection is being established",
          "example": 7
        },
        "authenticationError": {
          "type": "integer",
          "description": "Authentication failed",
          "example": 3
        },
        "connectError": {
          "type": "integer",
          "description": "Connection failed due to technical error",
          "example": 5
        },
        "unset": {
          "type": "integer",
          "description": "Accounts without valid IMAP settings",
          "example": 0
        },
        "disconnected": {
          "type": "integer",
          "description": "IMAP connection was closed",
          "example": 1
        }
      }
    },
    "CounterStats": { "type": "object" },
    "SettingsResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "EmailEngine version number",
          "example": "2.51.0"
        },
        "license": {
          "type": "string",
          "description": "EmailEngine license",
          "example": "LICENSE_EMAILENGINE"
        },
        "accounts": {
          "type": "integer",
          "description": "Number of registered accounts",
          "example": 26
        },
        "node": {
          "type": "string",
          "description": "Node.js Version",
          "example": "16.10.0"
        },
        "redis": {
          "type": "string",
          "description": "Redis Version",
          "example": "6.2.4"
        },
        "connections": { "$ref": "#/definitions/ConnectionsStats" },
        "counters": { "$ref": "#/definitions/CounterStats" }
      }
    },
    "format": {
      "type": "string",
      "description": "Markup language for HTML (\"html\" or \"markdown\")",
      "default": "html",
      "enum": ["html", "markdown"]
    },
    "AccountTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Template ID",
          "example": "AAABgS-UcAYAAAABAA",
          "maxLength": 256
        },
        "name": {
          "type": "string",
          "description": "Name of the template",
          "example": "Transaction receipt",
          "maxLength": 256
        },
        "description": {
          "type": "string",
          "description": "Optional description of the template",
          "example": "Something about the template",
          "maxLength": 1024
        },
        "format": { "$ref": "#/definitions/format" },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time this template was created",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The time this template was last updated",
          "example": "2021-02-17T13:43:18.860Z"
        }
      },
      "required": ["id", "name"]
    },
    "AccountTemplatesList": {
      "type": "array",
      "items": { "$ref": "#/definitions/AccountTemplate" }
    },
    "AccountTemplatesResponse": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "total": {
          "type": "integer",
          "description": "How many matching entries",
          "example": 120
        },
        "page": {
          "type": "integer",
          "description": "Current page (0-based index)",
          "example": 0
        },
        "pages": {
          "type": "integer",
          "description": "Total page count",
          "example": 24
        },
        "templates": { "$ref": "#/definitions/AccountTemplatesList" }
      },
      "required": ["account"]
    },
    "RootTokensItem": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "description": {
          "type": "string",
          "description": "Token description",
          "example": "Token description",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "metadata": {
          "type": "string",
          "description": "Related metadata in JSON format",
          "example": "{\"example\": \"value\"}",
          "maxLength": 1048576
        },
        "ip": {
          "type": "string",
          "description": "IP address of the requester",
          "example": "127.0.0.1",
          "x-format": {
            "ip": { "cidr": "forbidden", "version": ["ipv4", "ipv6"] }
          },
          "x-convert": { "trim": true }
        }
      },
      "required": ["account", "description"]
    },
    "RootTokensEntries": {
      "type": "array",
      "items": { "$ref": "#/definitions/RootTokensItem" }
    },
    "RootTokensResponse": {
      "type": "object",
      "properties": { "tokens": { "$ref": "#/definitions/RootTokensEntries" } }
    },
    "WebhookRoutesListEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Webhook ID",
          "example": "AAABgS-UcAYAAAABAA",
          "maxLength": 256
        },
        "name": {
          "type": "string",
          "description": "Name of the route",
          "example": "Send to Slack",
          "maxLength": 256
        },
        "description": {
          "type": "string",
          "description": "Optional description of the webhook route",
          "example": "Something about the route",
          "maxLength": 1024
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time this route was created",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The time this route was last updated",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "enabled": {
          "type": "boolean",
          "description": "Is the route enabled",
          "example": true
        },
        "targetUrl": {
          "type": "string",
          "description": "The URL where webhooks will be sent",
          "example": "https://myservice.com/imap/webhooks",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "tcount": {
          "type": "integer",
          "description": "How many times this route has been applied",
          "example": 123
        }
      },
      "required": ["id", "name"]
    },
    "WebhookRoutesList": {
      "type": "array",
      "items": { "$ref": "#/definitions/WebhookRoutesListEntry" }
    },
    "WebhookRoutesListResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "description": "How many matching entries",
          "example": 120
        },
        "page": {
          "type": "integer",
          "description": "Current page (0-based index)",
          "example": 0
        },
        "pages": {
          "type": "integer",
          "description": "Total page count",
          "example": 24
        },
        "webhooks": { "$ref": "#/definitions/WebhookRoutesList" }
      }
    },
    "AccountPath": {
      "type": "array",
      "description": "Specifies which mailbox folders to monitor for changes. The wildcard \"*\" includes all folders (also the default). Although you can still make API requests to folders not listed here, you will not receive webhooks for changes in those unlisted folders.",
      "example": ["*"],
      "x-constraint": { "single": true },
      "items": {
        "type": "string",
        "description": "Check changes only on selected paths. Either a single string path or an array of paths. Can use references like \"\\Sent\" or \"\\Inbox\". Set to `null` to unset.",
        "example": "INBOX",
        "maxLength": 1024
      }
    },
    "IMAPIndexer": {
      "type": "string",
      "description": "Sets the account-specific IMAP indexing method. Choose \"full\" to build a complete index that tracks deleted and updated emails, or \"fast\" to only detect newly received emails. Defaults to global setting.",
      "example": "full",
      "enum": ["full", "fast"],
      "x-convert": { "trim": true }
    },
    "SubconnectionPaths": {
      "type": "array",
      "description": "An array of mailbox paths. If set, then EmailEngine opens additional IMAP connections against these paths to detect changes faster. Note: Connection counts are usually highly limited.",
      "example": ["[Gmail]/Spam", "\\Sent"],
      "x-constraint": { "single": true },
      "items": { "type": "string", "maxLength": 256 }
    },
    "accessToken": {
      "type": "string",
      "description": "OAuth2 access token for the email account",
      "example": false,
      "enum": [false],
      "maxLength": 16384
    },
    "Authentication": {
      "type": "object",
      "description": "Authentication credentials for the email account",
      "enum": [false],
      "properties": {
        "user": {
          "type": "string",
          "description": "The username of the email account",
          "example": "myuser@gmail.com",
          "maxLength": 256
        },
        "accessToken": { "$ref": "#/definitions/accessToken" },
        "pass": {
          "type": "string",
          "description": "The password for the email account",
          "example": "verysecret",
          "maxLength": 256
        }
      },
      "required": ["user"]
    },
    "TLS": {
      "type": "object",
      "description": "Optional TLS configuration settings",
      "properties": {
        "rejectUnauthorized": {
          "type": "boolean",
          "description": "Whether to reject invalid TLS certificates",
          "example": true,
          "default": true
        },
        "minVersion": {
          "type": "string",
          "description": "The minimum TLS version to allow",
          "example": "TLSv1.2",
          "maxLength": 256
        }
      }
    },
    "IMAPResponse": {
      "type": "object",
      "description": "IMAP configuration",
      "properties": {
        "auth": { "$ref": "#/definitions/Authentication" },
        "useAuthServer": {
          "type": "boolean",
          "description": "Set to true to use an external authentication server instead of providing username/password directly",
          "example": false
        },
        "host": {
          "type": "string",
          "description": "The hostname of the IMAP server to connect to",
          "example": "imap.gmail.com",
          "x-format": { "hostname": true }
        },
        "port": {
          "type": "integer",
          "description": "The port number of the IMAP service",
          "example": 993,
          "minimum": 1,
          "maximum": 65535
        },
        "secure": {
          "type": "boolean",
          "description": "Whether to use TLS for the connection (usually true for port 993)",
          "example": true,
          "default": false
        },
        "tls": { "$ref": "#/definitions/TLS" },
        "resyncDelay": {
          "type": "integer",
          "description": "Delay in seconds between full resynchronizations",
          "example": 900,
          "default": 900
        },
        "disabled": {
          "type": "boolean",
          "description": "Set to true to disable IMAP handling for this account",
          "example": false
        },
        "sentMailPath": {
          "type": "string",
          "description": "Folder where sent messages are uploaded. Defaults to the account's 'Sent Mail' folder. Set to `null` to unset.",
          "example": "Sent Mail",
          "maxLength": 1024
        },
        "draftsMailPath": {
          "type": "string",
          "description": "Folder for drafts. Defaults to the account's 'Drafts' folder. Set to `null` to unset.",
          "example": "Drafts",
          "maxLength": 1024
        },
        "junkMailPath": {
          "type": "string",
          "description": "Folder for spam messages. Defaults to the account's 'Junk' folder. Set to `null` to unset.",
          "example": "Junk",
          "maxLength": 1024
        },
        "trashMailPath": {
          "type": "string",
          "description": "Folder for deleted emails. Defaults to the account's 'Trash' folder. Set to `null` to unset.",
          "example": "Trash",
          "maxLength": 1024
        },
        "archiveMailPath": {
          "type": "string",
          "description": "Folder for archived emails. Defaults to the account's 'Archive' folder. Set to `null` to unset.",
          "example": "Archive",
          "maxLength": 1024
        }
      }
    },
    "SMTPResponse": {
      "type": "object",
      "description": "SMTP configuration",
      "properties": {
        "auth": { "$ref": "#/definitions/Authentication" },
        "useAuthServer": {
          "type": "boolean",
          "description": "Set to true to use an external authentication server instead of providing username/password directly",
          "example": false
        },
        "host": {
          "type": "string",
          "description": "The hostname of the SMTP server to connect to",
          "example": "smtp.gmail.com",
          "x-format": { "hostname": true }
        },
        "port": {
          "type": "integer",
          "description": "The port number of the SMTP service",
          "example": 587,
          "minimum": 1,
          "maximum": 65535
        },
        "secure": {
          "type": "boolean",
          "description": "Whether to use TLS for the connection (usually true for port 465)",
          "example": false,
          "default": false
        },
        "tls": { "$ref": "#/definitions/TLS" }
      },
      "required": ["host", "port"]
    },
    "OAuth2Authentication": {
      "type": "object",
      "properties": {
        "delegatedUser": {
          "type": "string",
          "description": "Username of the shared mailbox (Microsoft 365 only)",
          "example": "shared.mailbox@outlook.com",
          "maxLength": 256
        },
        "delegatedAccount": {
          "type": "string",
          "description": "Account ID of another account to authenticate the shared mailbox. If provided, EmailEngine uses the credentials of this account instead of the current one.",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "user": {
          "type": "string",
          "description": "Email account username",
          "example": "user@outlook.com",
          "maxLength": 256
        }
      }
    },
    "Oauth2Response": {
      "type": "object",
      "description": "OAuth2 configuration",
      "properties": {
        "authorize": {
          "type": "boolean",
          "description": "Set to true to obtain a redirect link to the OAuth2 consent screen.",
          "example": false
        },
        "redirectUrl": {
          "type": "string",
          "description": "URL to redirect the user after the OAuth2 consent screen. Only valid if `authorize` is true.",
          "example": "https://myapp/account/settings.php",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "provider": {
          "type": "string",
          "description": "OAuth2 Application ID for an application configured in EmailEngine.",
          "example": "AAABhaBPHscAAAAH",
          "maxLength": 256
        },
        "auth": { "$ref": "#/definitions/OAuth2Authentication" },
        "useAuthServer": {
          "type": "boolean",
          "description": "Set to true to use an external authentication server instead of EmailEngine managing access tokens.",
          "example": false
        },
        "accessToken": {
          "type": "string",
          "description": "OAuth2 access token for the email account.",
          "example": "ya29.a0ARrdaM8a...",
          "maxLength": 16384
        },
        "refreshToken": {
          "type": "string",
          "description": "OAuth2 refresh token for the email account.",
          "example": "1//09Ie3CtORQYm...",
          "maxLength": 16384
        },
        "authority": {
          "type": "string",
          "description": "Specifies the Outlook account type: 'consumers', 'organizations', 'common', or an organization ID.",
          "example": "consumers",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "expires": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration date and time of the access token.",
          "example": "2021-03-22T13:13:31.000Z"
        }
      },
      "required": ["auth"]
    },
    "AccountInfoState": {
      "type": "string",
      "description": "Informational account state",
      "example": "connected",
      "enum": [
        "init",
        "syncing",
        "connecting",
        "connected",
        "authenticationError",
        "connectError",
        "unset",
        "disconnected"
      ]
    },
    "SMTPStatusStatus": {
      "type": "string",
      "description": "Was the last SMTP attempt successful or not",
      "enum": ["ok", "error"]
    },
    "SMTPInfoStatus": {
      "type": "object",
      "description": "Information about the last SMTP connection attempt",
      "properties": {
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "When was the status for SMTP connection last updated",
          "example": "2021-07-08T07:06:34.336Z"
        },
        "status": { "$ref": "#/definitions/SMTPStatusStatus" },
        "response": {
          "type": "string",
          "description": "SMTP response message for delivery attempt",
          "example": "250 OK"
        },
        "description": {
          "type": "string",
          "description": "Error information",
          "example": "Authentication failed"
        },
        "responseCode": {
          "type": "integer",
          "description": "Error status code",
          "example": 500
        },
        "code": {
          "type": "string",
          "description": "Error type identifier",
          "example": "EAUTH"
        },
        "command": {
          "type": "string",
          "description": "SMTP command that failed",
          "example": "AUTH PLAIN"
        }
      }
    },
    "AccountWebhooksCustomHeaders": {
      "type": "array",
      "description": "Custom HTTP headers added to webhook requests",
      "items": { "$ref": "#/definitions/WebhooksCustomHeader" }
    },
    "baseScopes": {
      "type": "string",
      "description": "OAuth2 Base Scopes",
      "example": "imap",
      "enum": ["imap", "api", "pubsub"],
      "x-convert": { "trim": true }
    },
    "AccountQuota": {
      "type": "object",
      "description": "Account quota information if query argument quota=true. This value will be false if the server does not provide quota information.",
      "enum": [false],
      "properties": {
        "usage": {
          "type": "integer",
          "description": "How many bytes has the account stored in emails",
          "example": 8547884032
        },
        "limit": {
          "type": "integer",
          "description": "How many bytes can the account store emails",
          "example": 16106127360
        },
        "status": {
          "type": "string",
          "description": "Textual information about the usage",
          "example": "53%"
        }
      }
    },
    "AccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "name": {
          "type": "string",
          "description": "Display name for the account",
          "example": "My Email Account",
          "maxLength": 256
        },
        "email": {
          "type": "string",
          "description": "Default email address of the account",
          "example": "user@example.com",
          "x-format": { "email": true }
        },
        "copy": {
          "type": "boolean",
          "description": "Copy submitted messages to Sent folder",
          "example": true
        },
        "logs": {
          "type": "boolean",
          "description": "Store recent logs",
          "example": false
        },
        "notifyFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Send webhooks for messages starting from provided date. The default is the account creation date. Only applies for IMAP accounts.",
          "example": "2021-07-08T07:06:34.336Z"
        },
        "path": { "$ref": "#/definitions/AccountPath" },
        "imapIndexer": { "$ref": "#/definitions/IMAPIndexer" },
        "subconnections": { "$ref": "#/definitions/SubconnectionPaths" },
        "webhooks": {
          "type": "string",
          "description": "Account-specific webhook URL",
          "example": "https://myservice.com/imap/webhooks",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "proxy": {
          "type": "string",
          "description": "Proxy URL",
          "example": "socks://proxy.example.com:1080",
          "x-format": {
            "uri": {
              "scheme": ["http", "https", "socks", "socks4", "socks5"],
              "allowRelative": false
            }
          }
        },
        "smtpEhloName": {
          "type": "string",
          "description": "Hostname to use for the SMTP EHLO/HELO greeting",
          "example": "my.proxy.tld",
          "x-format": { "hostname": true }
        },
        "imap": { "$ref": "#/definitions/IMAPResponse" },
        "smtp": { "$ref": "#/definitions/SMTPResponse" },
        "oauth2": { "$ref": "#/definitions/Oauth2Response" },
        "state": { "$ref": "#/definitions/AccountInfoState" },
        "smtpStatus": { "$ref": "#/definitions/SMTPInfoStatus" },
        "webhooksCustomHeaders": {
          "$ref": "#/definitions/AccountWebhooksCustomHeaders"
        },
        "locale": {
          "type": "string",
          "description": "Optional locale",
          "example": "fr",
          "maxLength": 100
        },
        "tz": {
          "type": "string",
          "description": "Optional timezone",
          "example": "Europe/Tallinn",
          "maxLength": 100
        },
        "type": { "$ref": "#/definitions/type" },
        "app": {
          "type": "string",
          "description": "OAuth2 application ID",
          "example": "AAABhaBPHscAAAAH",
          "maxLength": 256
        },
        "baseScopes": { "$ref": "#/definitions/baseScopes" },
        "counters": { "$ref": "#/definitions/AccountCounters" },
        "quota": { "$ref": "#/definitions/AccountQuota" },
        "syncTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last sync time",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "lastError": { "$ref": "#/definitions/AccountErrorEntry" }
      },
      "required": ["account", "type"]
    },
    "BlocklistListResponseItem": {
      "type": "object",
      "properties": {
        "recipient": {
          "type": "string",
          "description": "Listed email address",
          "example": "user@example.com",
          "x-format": { "email": true }
        },
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "messageId": {
          "type": "string",
          "description": "Message ID",
          "example": "<test123@example.com>"
        },
        "source": {
          "type": "string",
          "description": "Which mechanism was used to add the entry",
          "example": "api"
        },
        "reason": {
          "type": "string",
          "description": "Why this entry was added",
          "example": "api"
        },
        "remoteAddress": {
          "type": "string",
          "description": "Which IP address triggered the entry",
          "x-format": {
            "ip": { "cidr": "optional", "version": ["ipv4", "ipv6"] }
          }
        },
        "userAgent": {
          "type": "string",
          "description": "Which user agent triggered the entry",
          "example": "Mozilla/5.0 (Macintosh)"
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time this entry was added or updated",
          "example": "2021-02-17T13:43:18.860Z"
        }
      },
      "required": ["recipient", "account", "created"]
    },
    "BlocklistListEntries": {
      "type": "array",
      "items": { "$ref": "#/definitions/BlocklistListResponseItem" }
    },
    "BlocklistListResponse": {
      "type": "object",
      "properties": {
        "listId": {
          "type": "string",
          "description": "List ID",
          "example": "example",
          "maxLength": 256
        },
        "total": {
          "type": "integer",
          "description": "How many matching entries",
          "example": 120
        },
        "page": {
          "type": "integer",
          "description": "Current page (0-based index)",
          "example": 0
        },
        "pages": {
          "type": "integer",
          "description": "Total page count",
          "example": 24
        },
        "addresses": { "$ref": "#/definitions/BlocklistListEntries" }
      },
      "required": ["listId"]
    },
    "GatewayResponse": {
      "type": "object",
      "properties": {
        "gateway": {
          "type": "string",
          "description": "Gateway ID",
          "example": "example",
          "maxLength": 256
        },
        "name": {
          "type": "string",
          "description": "Display name for the gateway",
          "example": "My Email Gateway",
          "maxLength": 256
        },
        "deliveries": {
          "type": "integer",
          "description": "Count of email deliveries using this gateway",
          "example": 100
        },
        "lastUse": {
          "type": "string",
          "format": "date-time",
          "description": "Last delivery time",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "user": {
          "type": "string",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "pass": { "type": "string", "maxLength": 1024 },
        "host": {
          "type": "string",
          "description": "Hostname to connect to",
          "example": "smtp.gmail.com",
          "x-format": { "hostname": true }
        },
        "port": {
          "type": "integer",
          "description": "Service port number",
          "example": 465,
          "minimum": 1,
          "maximum": 65536
        },
        "secure": {
          "type": "boolean",
          "description": "Should connection use TLS. Usually true for port 465",
          "example": true,
          "default": false
        },
        "lastError": { "$ref": "#/definitions/AccountErrorEntry" }
      },
      "required": ["gateway", "name"]
    },
    "ApplicationResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "OAuth2 application ID",
          "example": "AAABhaBPHscAAAAH",
          "maxLength": 256
        },
        "name": {
          "type": "string",
          "description": "Display name for the app",
          "example": "My OAuth2 App",
          "maxLength": 256
        },
        "description": {
          "type": "string",
          "description": "OAuth2 application description",
          "example": "App description",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "title": {
          "type": "string",
          "description": "Title for the application button",
          "example": "App title",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "provider": { "$ref": "#/definitions/OAuth2Provider" },
        "enabled": {
          "type": "boolean",
          "description": "Is the application enabled",
          "example": true
        },
        "legacy": {
          "type": "boolean",
          "description": "`true` for older OAuth2 apps set via the settings endpoint",
          "example": true
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time this entry was added",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The time this entry was updated",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "includeInListing": {
          "type": "boolean",
          "description": "Is the application listed in the hosted authentication form",
          "example": true
        },
        "clientId": {
          "type": "string",
          "description": "Client or Application ID for 3-legged OAuth2 applications",
          "example": "4f05f488-d858-4f2c-bd12-1039062612fe"
        },
        "clientSecret": {
          "type": "string",
          "description": "Client secret for 3-legged OAuth2 applications. Actual value is not revealed.",
          "example": "******"
        },
        "authority": {
          "type": "string",
          "description": "Authorization tenant value for Outlook OAuth2 applications",
          "example": "common"
        },
        "redirectUrl": {
          "type": "string",
          "description": "Redirect URL for 3-legged OAuth2 applications",
          "example": "https://myservice.com/oauth",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "googleProjectId": { "$ref": "#/definitions/googleProjectId" },
        "googleWorkspaceAccounts": {
          "type": "boolean",
          "description": "Show only Google Workspace accounts on the OAuth2 login page",
          "example": false
        },
        "serviceClientEmail": {
          "type": "string",
          "description": "Service Client Email for 2-legged OAuth2 applications",
          "example": "name@project-123.iam.gserviceaccount.com",
          "x-format": { "email": true }
        },
        "serviceClient": {
          "type": "string",
          "description": "Service client ID for 2-legged OAuth2 applications",
          "example": "9103965568215821627203"
        },
        "serviceKey": {
          "type": "string",
          "description": "PEM formatted service secret for 2-legged OAuth2 applications. Actual value is not revealed.",
          "example": "******"
        },
        "accounts": {
          "type": "integer",
          "description": "The number of accounts registered with this application. Not available for legacy apps.",
          "example": 12
        },
        "lastError": { "$ref": "#/definitions/AccountErrorEntry" }
      },
      "required": ["id", "provider", "created"]
    },
    "SignatureResponseItem": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Email address associated with the signature",
          "example": "user@example.com",
          "x-format": { "email": true }
        },
        "signature": {
          "type": "string",
          "description": "Signature HTML code",
          "example": "<div>Best regards,</div>"
        }
      },
      "required": ["address", "signature"]
    },
    "SignatureEntries": {
      "type": "array",
      "items": { "$ref": "#/definitions/SignatureResponseItem" }
    },
    "AccountTokenResponse": {
      "type": "object",
      "properties": {
        "signatures": { "$ref": "#/definitions/SignatureEntries" }
      }
    },
    "FromAddress": {
      "type": "object",
      "description": "The sender's email address",
      "example": { "name": "From Me", "address": "sender@example.com" },
      "properties": {
        "name": {
          "type": "string",
          "example": "Some Name",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "address": {
          "type": "string",
          "example": "user@example.com",
          "x-format": { "email": { "ignoreLength": false } }
        }
      },
      "required": ["address"]
    },
    "RcptAddressEntry": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Some Name",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "address": {
          "type": "string",
          "example": "user@example.com",
          "x-format": { "email": { "ignoreLength": false } }
        }
      },
      "required": ["address"]
    },
    "AddressList": {
      "type": "array",
      "description": "An array of email address entries",
      "items": { "$ref": "#/definitions/RcptAddressEntry" }
    },
    "FlagList": {
      "type": "array",
      "description": "List of IMAP flags associated with the message",
      "items": { "type": "string", "example": "\\Seen" }
    },
    "LabelList": {
      "type": "array",
      "description": "List of Gmail labels associated with the message",
      "items": { "type": "string", "example": "\\Important" }
    },
    "AttachmentEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the attachment",
          "example": "AAAAAgAACrIyLjI"
        },
        "contentType": {
          "type": "string",
          "description": "MIME type of the attachment",
          "example": "image/gif"
        },
        "encodedSize": {
          "type": "integer",
          "description": "Size of the attachment in bytes when encoded (actual file size may be smaller due to encoding)",
          "example": 48
        },
        "embedded": {
          "type": "boolean",
          "description": "Indicates if the attachment is an embedded image used in an HTML `<img>` tag",
          "example": true
        },
        "inline": {
          "type": "boolean",
          "description": "Indicates if the attachment should be displayed inline in the message preview",
          "example": true
        },
        "contentId": {
          "type": "string",
          "description": "Content ID used for embedded images",
          "example": "<unique-image-id@localhost>"
        },
        "filename": {
          "type": "string",
          "description": "Filename of the attachment",
          "example": "image.png"
        },
        "method": {
          "type": "string",
          "description": "Calendar event method if the attachment is an iCalendar event",
          "example": "REQUEST"
        }
      }
    },
    "AttachmentList": {
      "type": "array",
      "description": "Array of attachment objects",
      "items": { "$ref": "#/definitions/AttachmentEntry" }
    },
    "encodedSize": {
      "type": "object",
      "description": "Size of the encoded message parts in bytes",
      "properties": {
        "plain": {
          "type": "integer",
          "description": "Size in bytes of the plain text content",
          "example": 1013
        },
        "html": {
          "type": "integer",
          "description": "Size in bytes of the HTML content",
          "example": 1013
        }
      }
    },
    "TextInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier for fetching the message text content",
          "example": "AAAAAgAACqiTkaExkaEykA"
        },
        "encodedSize": { "$ref": "#/definitions/encodedSize" }
      }
    },
    "MessageListEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the message",
          "example": "AAAAAgAACrI"
        },
        "uid": {
          "type": "integer",
          "description": "Unique identifier of the message within the mailbox",
          "example": 12345
        },
        "emailId": {
          "type": "string",
          "description": "Globally unique email ID assigned by the server (if supported)",
          "example": "1694937972638499881"
        },
        "threadId": {
          "type": "string",
          "description": "Unique identifier for the thread to which this message belongs (if supported by the server)",
          "example": "1694936993596975454"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the message was added to the mailbox (INTERNALDATE)",
          "example": "2021-03-22T13:13:31.000Z"
        },
        "draft": {
          "type": "boolean",
          "description": "True if this message is marked as a draft",
          "example": false
        },
        "unseen": {
          "type": "boolean",
          "description": "True if the message is marked as unseen (unread)",
          "example": true
        },
        "flagged": {
          "type": "boolean",
          "description": "True if this message is flagged",
          "example": true
        },
        "size": {
          "type": "integer",
          "description": "Size of the message in bytes",
          "example": 1040
        },
        "subject": {
          "type": "string",
          "description": "Subject of the message, decoded into Unicode",
          "example": "What a wonderful message"
        },
        "from": { "$ref": "#/definitions/FromAddress" },
        "replyTo": { "$ref": "#/definitions/AddressList" },
        "to": { "$ref": "#/definitions/AddressList" },
        "cc": { "$ref": "#/definitions/AddressList" },
        "bcc": { "$ref": "#/definitions/AddressList" },
        "messageId": {
          "type": "string",
          "description": "The Message-ID header value of the message",
          "example": "<test123@example.com>"
        },
        "inReplyTo": {
          "type": "string",
          "description": "The In-Reply-To header value (Message-ID of the message this is a reply to)",
          "example": "<7JBUMt0WOn+_==MOkaCOQ@mail.gmail.com>"
        },
        "flags": { "$ref": "#/definitions/FlagList" },
        "labels": { "$ref": "#/definitions/LabelList" },
        "attachments": { "$ref": "#/definitions/AttachmentList" },
        "text": { "$ref": "#/definitions/TextInfo" },
        "preview": {
          "type": "string",
          "description": "A short text preview of the message content"
        }
      }
    },
    "PageMessages": {
      "type": "array",
      "items": { "$ref": "#/definitions/MessageListEntry" }
    },
    "MessageList": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "description": "Total number of matching messages. This number is exact for IMAP accounts, but approximate for Gmail API accounts.",
          "example": 120
        },
        "page": {
          "type": "integer",
          "description": "Current page index (0-based)",
          "example": 0
        },
        "pages": {
          "type": "integer",
          "description": "Total number of pages. This number is exact for IMAP accounts, but approximate for Gmail API accounts.",
          "example": 24
        },
        "nextPageCursor": {
          "type": "string",
          "description": "Paging cursor for the next page. Continue paging until this value is null.",
          "example": "imap_kcQIji3UobDDTxc"
        },
        "prevPageCursor": {
          "type": "string",
          "description": "Paging cursor for the previous page",
          "example": "imap_kcQIji3UobDDTxc"
        },
        "messages": { "$ref": "#/definitions/PageMessages" }
      }
    },
    "MailboxSpecialUse": {
      "type": "string",
      "description": "Special use flag of the mailbox",
      "example": "\\Sent",
      "enum": [
        "\\All",
        "\\Archive",
        "\\Drafts",
        "\\Flagged",
        "\\Junk",
        "\\Sent",
        "\\Trash",
        "\\Inbox"
      ]
    },
    "MailboxSpecialUseSource": {
      "type": "string",
      "description": "Source of the specialUse flag. Can be \"user\" (set via API), \"extension\" (provided by the email server), or \"name\" (determined based on the folder name).",
      "example": "extension",
      "enum": ["user", "extension", "name"]
    },
    "MailboxResponseStatus": {
      "type": "object",
      "description": "Optional mailbox status information",
      "properties": {
        "messages": {
          "type": "integer",
          "description": "Number of messages in the mailbox as reported by the STATUS command",
          "example": 120
        },
        "unseen": {
          "type": "integer",
          "description": "Number of unseen messages in the mailbox as reported by the STATUS command",
          "example": 120
        }
      }
    },
    "MailboxResponseItem": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Full path to the mailbox",
          "example": "Kalender/S&APw-nnip&AOQ-evad"
        },
        "delimiter": {
          "type": "string",
          "description": "Hierarchy delimiter used in the mailbox path",
          "example": "/"
        },
        "parentPath": {
          "type": "string",
          "description": "Full path to the parent mailbox",
          "example": "Kalender"
        },
        "name": {
          "type": "string",
          "description": "Name of the mailbox",
          "example": "Sünnipäevad"
        },
        "listed": {
          "type": "boolean",
          "description": "True if the mailbox was returned in response to the LIST command",
          "example": true
        },
        "subscribed": {
          "type": "boolean",
          "description": "True if the mailbox was returned in response to the LSUB command",
          "example": true
        },
        "specialUse": { "$ref": "#/definitions/MailboxSpecialUse" },
        "specialUseSource": { "$ref": "#/definitions/MailboxSpecialUseSource" },
        "noInferiors": {
          "type": "boolean",
          "description": "True if adding subfolders is not allowed",
          "example": false
        },
        "messages": {
          "type": "integer",
          "description": "Number of messages in the mailbox",
          "example": 120
        },
        "uidNext": {
          "type": "integer",
          "description": "Next expected UID",
          "example": 121
        },
        "status": { "$ref": "#/definitions/MailboxResponseStatus" }
      },
      "required": ["path", "parentPath", "name"]
    },
    "MailboxesList": {
      "type": "array",
      "items": { "$ref": "#/definitions/MailboxResponseItem" }
    },
    "MailboxesFilterResponse": {
      "type": "object",
      "properties": { "mailboxes": { "$ref": "#/definitions/MailboxesList" } }
    },
    "Model1": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "user": {
          "type": "string",
          "description": "Username",
          "example": "user@example.com",
          "maxLength": 256
        },
        "accessToken": {
          "type": "string",
          "description": "Access Token",
          "example": "aGVsbG8gd29ybGQ=",
          "maxLength": 256
        },
        "provider": { "$ref": "#/definitions/OAuth2Provider" }
      },
      "required": ["account", "user", "accessToken", "provider"]
    },
    "dkim": { "type": "object", "description": "DKIM results" },
    "spf": { "type": "object", "description": "SPF results" },
    "dmarc": { "type": "object", "description": "DMARC results" },
    "bimi": { "type": "object", "description": "BIMI results" },
    "arc": { "type": "object", "description": "ARC results" },
    "mainSig": {
      "type": "object",
      "description": "Primary DKIM signature. `status.aligned` should be set, otherwise DKIM check should not be considered as passed."
    },
    "DeliveryCheckResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Was the test completed",
          "example": true
        },
        "dkim": { "$ref": "#/definitions/dkim" },
        "spf": { "$ref": "#/definitions/spf" },
        "dmarc": { "$ref": "#/definitions/dmarc" },
        "bimi": { "$ref": "#/definitions/bimi" },
        "arc": { "$ref": "#/definitions/arc" },
        "mainSig": { "$ref": "#/definitions/mainSig" }
      }
    },
    "queue": {
      "type": "string",
      "description": "Queue ID",
      "example": "notify",
      "enum": ["notify", "submit", "documents"],
      "x-convert": { "trim": true }
    },
    "QueueJobs": {
      "type": "object",
      "properties": {
        "active": {
          "type": "integer",
          "description": "Jobs that are currently being processed",
          "example": 123
        },
        "delayed": {
          "type": "integer",
          "description": "Jobs that are processed in the future",
          "example": 123
        },
        "paused": {
          "type": "integer",
          "description": "Jobs that would be processed once queue processing is resumed",
          "example": 123
        },
        "waiting": {
          "type": "integer",
          "description": "Jobs that should be processed, but are waiting until there are any free handlers",
          "example": 123
        }
      }
    },
    "SettingsQueueResponse": {
      "type": "object",
      "properties": {
        "queue": { "$ref": "#/definitions/queue" },
        "jobs": { "$ref": "#/definitions/QueueJobs" },
        "paused": {
          "type": "boolean",
          "description": "Is the queue paused or not",
          "example": false
        }
      },
      "required": ["queue"]
    },
    "RequestTemplateContent": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string",
          "description": "Message subject",
          "example": "What a wonderful message",
          "maxLength": 10240,
          "x-convert": { "trim": true }
        },
        "text": {
          "type": "string",
          "description": "Plaintext content of the message",
          "example": "Hello from myself!",
          "maxLength": 5242880,
          "x-convert": { "trim": true }
        },
        "html": {
          "type": "string",
          "description": "HTML content of the message",
          "example": "<p>Hello from myself!</p>",
          "maxLength": 5242880,
          "x-convert": { "trim": true }
        },
        "previewText": {
          "type": "string",
          "description": "Preview text that appears in the inbox after the subject line",
          "example": "Welcome to our newsletter!",
          "maxLength": 1024
        },
        "format": { "$ref": "#/definitions/format" }
      }
    },
    "AccountTemplateResponse": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "id": {
          "type": "string",
          "description": "Template ID",
          "example": "AAABgS-UcAYAAAABAA",
          "maxLength": 256
        },
        "name": {
          "type": "string",
          "description": "Name of the template",
          "example": "Transaction receipt",
          "maxLength": 256
        },
        "description": {
          "type": "string",
          "description": "Optional description of the template",
          "example": "Something about the template",
          "maxLength": 1024
        },
        "format": { "$ref": "#/definitions/format" },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time this template was created",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The time this template was last updated",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "content": { "$ref": "#/definitions/RequestTemplateContent" }
      },
      "required": ["account", "id", "name"]
    },
    "ReferrerAllowlist": {
      "type": "array",
      "description": "HTTP referrer allowlist for API requests",
      "example": [
        "*web.domain.org/*",
        "*.domain.org/*",
        "https://domain.org/*"
      ],
      "default": false,
      "enum": [false],
      "x-constraint": { "single": true },
      "items": { "type": "string" }
    },
    "AddressAllowlist": {
      "type": "array",
      "description": "IP address allowlist",
      "example": ["1.2.3.4", "5.6.7.8", "127.0.0.0/8"],
      "default": false,
      "enum": [false],
      "x-constraint": { "single": true },
      "items": {
        "type": "string",
        "x-format": {
          "ip": { "cidr": "optional", "version": ["ipv4", "ipv6"] }
        }
      }
    },
    "AddressRateLimit": {
      "type": "object",
      "description": "Rate limits for the token",
      "example": { "maxRequests": 20, "timeWindow": 2 },
      "default": false,
      "enum": [false],
      "properties": {
        "maxRequests": {
          "type": "integer",
          "description": "Allowed count of requests in the rate limit time window",
          "example": 20,
          "minimum": 1
        },
        "timeWindow": {
          "type": "integer",
          "description": "Rate limit time window in seconds",
          "example": 2,
          "minimum": 1
        }
      }
    },
    "TokenRestrictions": {
      "type": "object",
      "description": "Access restrictions",
      "enum": [false],
      "properties": {
        "referrers": { "$ref": "#/definitions/ReferrerAllowlist" },
        "addresses": { "$ref": "#/definitions/AddressAllowlist" },
        "rateLimit": { "$ref": "#/definitions/AddressRateLimit" }
      }
    },
    "AccountTokensItem": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "description": {
          "type": "string",
          "description": "Token description",
          "example": "Token description",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "metadata": {
          "type": "string",
          "description": "Related metadata in JSON format",
          "example": "{\"example\": \"value\"}",
          "maxLength": 1048576
        },
        "restrictions": { "$ref": "#/definitions/TokenRestrictions" },
        "ip": {
          "type": "string",
          "description": "IP address of the requester",
          "example": "127.0.0.1",
          "x-format": {
            "ip": { "cidr": "forbidden", "version": ["ipv4", "ipv6"] }
          },
          "x-convert": { "trim": true }
        }
      },
      "required": ["account", "description"]
    },
    "AccountTokensEntries": {
      "type": "array",
      "items": { "$ref": "#/definitions/AccountTokensItem" }
    },
    "AccountsTokensResponse": {
      "type": "object",
      "properties": {
        "tokens": { "$ref": "#/definitions/AccountTokensEntries" }
      }
    },
    "WebhookRouteContent": {
      "type": "object",
      "properties": {
        "fn": {
          "type": "string",
          "description": "Filter function",
          "example": "return true;"
        },
        "map": {
          "type": "string",
          "description": "Mapping function",
          "example": "payload.ts = Date.now(); return payload;"
        }
      }
    },
    "WebhookRouteResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Webhook ID",
          "example": "AAABgS-UcAYAAAABAA",
          "maxLength": 256
        },
        "name": {
          "type": "string",
          "description": "Name of the route",
          "example": "Send to Slack",
          "maxLength": 256
        },
        "description": {
          "type": "string",
          "description": "Optional description of the webhook route",
          "example": "Something about the route",
          "maxLength": 1024
        },
        "created": {
          "type": "string",
          "format": "date-time",
          "description": "The time this route was created",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "The time this route was last updated",
          "example": "2021-02-17T13:43:18.860Z"
        },
        "enabled": {
          "type": "boolean",
          "description": "Is the route enabled",
          "example": true
        },
        "targetUrl": {
          "type": "string",
          "description": "The URL where webhooks will be sent",
          "example": "https://myservice.com/imap/webhooks",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "tcount": {
          "type": "integer",
          "description": "How many times this route has been applied",
          "example": 123
        },
        "content": { "$ref": "#/definitions/WebhookRouteContent" }
      },
      "required": ["id", "name"]
    },
    "MessageHeaders": {
      "type": "object",
      "description": "An object where each header field name is a key, and the value is an array of header field values. Not available for MS Graph API emails.",
      "example": {
        "from": ["From Me <sender@example.com>"],
        "subject": ["What a wonderful message"]
      }
    },
    "TextInfoDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identifier for fetching the message text content",
          "example": "AAAAAgAACqiTkaExkaEykA"
        },
        "encodedSize": { "$ref": "#/definitions/encodedSize" },
        "plain": {
          "type": "string",
          "description": "Plaintext content of the message",
          "example": "Hello from myself!"
        },
        "html": {
          "type": "string",
          "description": "HTML content of the message",
          "example": "<p>Hello from myself!</p>"
        },
        "hasMore": {
          "type": "boolean",
          "description": "True if there is more content available beyond what was fetched; false if the entire content is included",
          "example": false
        }
      }
    },
    "BounceResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Server response message",
          "example": "550 5.1.1 No such user"
        },
        "status": {
          "type": "string",
          "description": "Status code from the server",
          "example": "5.1.1"
        }
      }
    },
    "BounceEntry": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Identifier of the bounce email message",
          "example": "AAAAAQAACnA",
          "maxLength": 256
        },
        "recipient": {
          "type": "string",
          "description": "Email address of the recipient that bounced",
          "example": "recipient@example.com",
          "x-format": { "email": true }
        },
        "action": {
          "type": "string",
          "description": "Action taken, e.g., \"failed\"",
          "example": "failed"
        },
        "response": { "$ref": "#/definitions/BounceResponse" },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Time the bounce was registered by EmailEngine",
          "example": "2021-03-22T13:13:31.000Z"
        }
      },
      "required": ["message"]
    },
    "BounceList": {
      "type": "array",
      "items": { "$ref": "#/definitions/BounceEntry" }
    },
    "Model2": {
      "type": "string",
      "description": "Special use flag of the mailbox containing this message",
      "example": "\\Sent",
      "enum": [
        "\\All",
        "\\Archive",
        "\\Drafts",
        "\\Flagged",
        "\\Junk",
        "\\Sent",
        "\\Trash",
        "\\Inbox"
      ]
    },
    "MessageSpecialUse": {
      "type": "string",
      "description": "Special use flag associated with the message, indicating the mailbox special use",
      "example": "\\Sent",
      "enum": ["\\Drafts", "\\Junk", "\\Sent", "\\Trash", "\\Inbox"]
    },
    "MessageDetails": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the message",
          "example": "AAAAAgAACrI"
        },
        "uid": {
          "type": "integer",
          "description": "Unique identifier of the message within the mailbox",
          "example": 12345
        },
        "emailId": {
          "type": "string",
          "description": "Globally unique email ID assigned by the server (if supported)",
          "example": "1694937972638499881"
        },
        "threadId": {
          "type": "string",
          "description": "Unique identifier for the thread to which this message belongs (if supported by the server)",
          "example": "1694936993596975454"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Date when the message was added to the mailbox (INTERNALDATE)",
          "example": "2021-03-22T13:13:31.000Z"
        },
        "draft": {
          "type": "boolean",
          "description": "True if this message is marked as a draft",
          "example": false
        },
        "unseen": {
          "type": "boolean",
          "description": "True if the message is marked as unseen (unread)",
          "example": true
        },
        "flagged": {
          "type": "boolean",
          "description": "True if this message is flagged",
          "example": true
        },
        "size": {
          "type": "integer",
          "description": "Size of the message in bytes",
          "example": 1040
        },
        "subject": {
          "type": "string",
          "description": "Subject of the message, decoded into Unicode",
          "example": "What a wonderful message"
        },
        "from": { "$ref": "#/definitions/FromAddress" },
        "sender": { "$ref": "#/definitions/FromAddress" },
        "to": { "$ref": "#/definitions/AddressList" },
        "cc": { "$ref": "#/definitions/AddressList" },
        "bcc": { "$ref": "#/definitions/AddressList" },
        "replyTo": { "$ref": "#/definitions/AddressList" },
        "messageId": {
          "type": "string",
          "description": "The Message-ID header value of the message",
          "example": "<test123@example.com>"
        },
        "inReplyTo": {
          "type": "string",
          "description": "The In-Reply-To header value (Message-ID of the message this is a reply to)",
          "example": "<7JBUMt0WOn+_==MOkaCOQ@mail.gmail.com>"
        },
        "flags": { "$ref": "#/definitions/FlagList" },
        "labels": { "$ref": "#/definitions/LabelList" },
        "attachments": { "$ref": "#/definitions/AttachmentList" },
        "headers": { "$ref": "#/definitions/MessageHeaders" },
        "text": { "$ref": "#/definitions/TextInfoDetails" },
        "bounces": { "$ref": "#/definitions/BounceList" },
        "isAutoReply": {
          "type": "boolean",
          "description": "True if this message was detected to be an auto-reply email, like an Out of Office notice",
          "example": false
        },
        "specialUse": { "$ref": "#/definitions/Model2" },
        "messageSpecialUse": { "$ref": "#/definitions/MessageSpecialUse" }
      }
    },
    "TextResponse": {
      "type": "object",
      "properties": {
        "plain": {
          "type": "string",
          "description": "Plaintext content",
          "example": "Hello world"
        },
        "html": {
          "type": "string",
          "description": "HTML content",
          "example": "<p>Hello world</p>"
        },
        "hasMore": {
          "type": "boolean",
          "description": "Is the current text output capped or not",
          "example": false
        }
      }
    },
    "ImapConfiguration": {
      "type": "object",
      "description": "IMAP configuration",
      "enum": [false],
      "properties": {
        "auth": { "$ref": "#/definitions/Authentication" },
        "useAuthServer": {
          "type": "boolean",
          "description": "Set to true to use an external authentication server instead of providing username/password directly",
          "example": false
        },
        "host": {
          "type": "string",
          "description": "The hostname of the IMAP server to connect to",
          "example": "imap.gmail.com",
          "x-format": { "hostname": true }
        },
        "port": {
          "type": "integer",
          "description": "The port number of the IMAP service",
          "example": 993,
          "minimum": 1,
          "maximum": 65535
        },
        "secure": {
          "type": "boolean",
          "description": "Whether to use TLS for the connection (usually true for port 993)",
          "example": true,
          "default": false
        },
        "tls": { "$ref": "#/definitions/TLS" },
        "resyncDelay": {
          "type": "integer",
          "description": "Delay in seconds between full resynchronizations",
          "example": 900,
          "default": 900
        },
        "disabled": {
          "type": "boolean",
          "description": "Set to true to disable IMAP handling for this account",
          "example": false
        },
        "sentMailPath": {
          "type": "string",
          "description": "Folder where sent messages are uploaded. Defaults to the account's 'Sent Mail' folder. Set to `null` to unset.",
          "example": "Sent Mail",
          "maxLength": 1024
        },
        "draftsMailPath": {
          "type": "string",
          "description": "Folder for drafts. Defaults to the account's 'Drafts' folder. Set to `null` to unset.",
          "example": "Drafts",
          "maxLength": 1024
        },
        "junkMailPath": {
          "type": "string",
          "description": "Folder for spam messages. Defaults to the account's 'Junk' folder. Set to `null` to unset.",
          "example": "Junk",
          "maxLength": 1024
        },
        "trashMailPath": {
          "type": "string",
          "description": "Folder for deleted emails. Defaults to the account's 'Trash' folder. Set to `null` to unset.",
          "example": "Trash",
          "maxLength": 1024
        },
        "archiveMailPath": {
          "type": "string",
          "description": "Folder for archived emails. Defaults to the account's 'Archive' folder. Set to `null` to unset.",
          "example": "Archive",
          "maxLength": 1024
        }
      }
    },
    "SmtpConfiguration": {
      "type": "object",
      "description": "SMTP configuration",
      "enum": [false],
      "properties": {
        "auth": { "$ref": "#/definitions/Authentication" },
        "useAuthServer": {
          "type": "boolean",
          "description": "Set to true to use an external authentication server instead of providing username/password directly",
          "example": false
        },
        "host": {
          "type": "string",
          "description": "The hostname of the SMTP server to connect to",
          "example": "smtp.gmail.com",
          "x-format": { "hostname": true }
        },
        "port": {
          "type": "integer",
          "description": "The port number of the SMTP service",
          "example": 587,
          "minimum": 1,
          "maximum": 65535
        },
        "secure": {
          "type": "boolean",
          "description": "Whether to use TLS for the connection (usually true for port 465)",
          "example": false,
          "default": false
        },
        "tls": { "$ref": "#/definitions/TLS" }
      },
      "required": ["host", "port"]
    },
    "OAuth2": {
      "type": "object",
      "description": "OAuth2 configuration",
      "enum": [false],
      "properties": {
        "authorize": {
          "type": "boolean",
          "description": "Set to true to obtain a redirect link to the OAuth2 consent screen.",
          "example": false
        },
        "redirectUrl": {
          "type": "string",
          "description": "URL to redirect the user after the OAuth2 consent screen. Only valid if `authorize` is true.",
          "example": "https://myapp/account/settings.php",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "provider": {
          "type": "string",
          "description": "OAuth2 Application ID for an application configured in EmailEngine.",
          "example": "AAABhaBPHscAAAAH",
          "maxLength": 256
        },
        "auth": { "$ref": "#/definitions/OAuth2Authentication" },
        "useAuthServer": {
          "type": "boolean",
          "description": "Set to true to use an external authentication server instead of EmailEngine managing access tokens.",
          "example": false
        },
        "accessToken": {
          "type": "string",
          "description": "OAuth2 access token for the email account.",
          "example": "ya29.a0ARrdaM8a...",
          "maxLength": 16384
        },
        "refreshToken": {
          "type": "string",
          "description": "OAuth2 refresh token for the email account.",
          "example": "1//09Ie3CtORQYm...",
          "maxLength": 16384
        },
        "authority": {
          "type": "string",
          "description": "Specifies the Outlook account type: 'consumers', 'organizations', 'common', or an organization ID.",
          "example": "consumers",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "expires": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration date and time of the access token.",
          "example": "2021-03-22T13:13:31.000Z"
        }
      },
      "required": ["auth"]
    },
    "CreateAccount": {
      "type": "object",
      "example": {
        "account": "example",
        "name": "Nyan Cat",
        "email": "nyan.cat@example.com",
        "imap": {
          "auth": { "user": "nyan.cat", "pass": "sercretpass" },
          "host": "mail.example.com",
          "port": 993,
          "secure": true
        },
        "smtp": {
          "auth": { "user": "nyan.cat", "pass": "secretpass" },
          "host": "mail.example.com",
          "port": 465,
          "secure": true
        }
      },
      "properties": {
        "account": {
          "type": "string",
          "description": "Account ID. If set to `null`, a unique ID will be generated automatically. If you provide an existing account ID, the settings for that account will be updated instead",
          "example": "example",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "name": {
          "type": "string",
          "description": "Display name for the account",
          "example": "My Email Account",
          "maxLength": 256
        },
        "email": {
          "type": "string",
          "description": "Default email address of the account",
          "example": "user@example.com",
          "x-format": { "email": true }
        },
        "path": { "$ref": "#/definitions/AccountPath" },
        "subconnections": { "$ref": "#/definitions/SubconnectionPaths" },
        "webhooks": {
          "type": "string",
          "description": "Account-specific webhook URL",
          "example": "https://myservice.com/imap/webhooks",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "copy": {
          "type": "boolean",
          "description": "Copy submitted messages to Sent folder. Set to `null` to unset and use provider specific default.",
          "example": null
        },
        "logs": {
          "type": "boolean",
          "description": "Store recent logs",
          "example": false,
          "default": false
        },
        "notifyFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Send webhooks for messages starting from provided date. The default is the account creation date. Only applies for IMAP accounts.",
          "example": "2021-07-08T07:06:34.336Z",
          "default": "now"
        },
        "proxy": {
          "type": "string",
          "description": "Proxy URL",
          "example": "socks://proxy.example.com:1080",
          "x-format": {
            "uri": {
              "scheme": ["http", "https", "socks", "socks4", "socks5"],
              "allowRelative": false
            }
          }
        },
        "smtpEhloName": {
          "type": "string",
          "description": "Hostname to use for the SMTP EHLO/HELO greeting",
          "example": "my.proxy.tld",
          "x-format": { "hostname": true }
        },
        "imapIndexer": { "$ref": "#/definitions/IMAPIndexer" },
        "imap": { "$ref": "#/definitions/ImapConfiguration" },
        "smtp": { "$ref": "#/definitions/SmtpConfiguration" },
        "oauth2": { "$ref": "#/definitions/OAuth2" },
        "webhooksCustomHeaders": {
          "$ref": "#/definitions/AccountWebhooksCustomHeaders"
        },
        "locale": {
          "type": "string",
          "description": "Optional locale",
          "example": "fr",
          "maxLength": 100
        },
        "tz": {
          "type": "string",
          "description": "Optional timezone",
          "example": "Europe/Tallinn",
          "maxLength": 100
        }
      },
      "required": ["account", "name"]
    },
    "CreateAccountState": {
      "type": "string",
      "description": "Is the account new or updated existing",
      "example": "new",
      "enum": ["existing", "new"]
    },
    "CreateAccountResponse": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "state": { "$ref": "#/definitions/CreateAccountState" }
      },
      "required": ["account", "state"]
    },
    "CreateGateway": {
      "type": "object",
      "properties": {
        "gateway": {
          "type": "string",
          "description": "Gateway ID",
          "example": "sendgun",
          "default": null,
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "name": {
          "type": "string",
          "description": "Account Name",
          "example": "John Smith",
          "maxLength": 256
        },
        "user": {
          "type": "string",
          "default": null,
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "pass": { "type": "string", "default": null, "maxLength": 1024 },
        "host": {
          "type": "string",
          "description": "Hostname to connect to",
          "example": "smtp.gmail.com",
          "x-format": { "hostname": true }
        },
        "port": {
          "type": "integer",
          "description": "Service port number",
          "example": 465,
          "minimum": 1,
          "maximum": 65536
        },
        "secure": {
          "type": "boolean",
          "description": "Should connection use TLS. Usually true for port 465",
          "example": true,
          "default": false
        }
      },
      "required": ["gateway", "name", "host", "port"]
    },
    "CreateGatewayState": {
      "type": "string",
      "description": "Is the gateway new or updated existing",
      "example": "new",
      "enum": ["existing", "new"]
    },
    "CreateGatewayResponse": {
      "type": "object",
      "properties": {
        "gateway": {
          "type": "string",
          "description": "Gateway ID",
          "example": "example",
          "maxLength": 256
        },
        "state": { "$ref": "#/definitions/CreateGatewayState" }
      },
      "required": ["gateway", "state"]
    },
    "RegisterLicense": {
      "type": "object",
      "properties": {
        "license": {
          "type": "string",
          "description": "License file",
          "example": "-----BEGIN LICENSE-----\r\n...",
          "maxLength": 10240
        }
      },
      "required": ["license"]
    },
    "provider": {
      "type": "string",
      "description": "OAuth2 provider",
      "example": "gmail",
      "enum": ["gmail", "gmailService", "outlook", "mailRu"],
      "maxLength": 256,
      "x-convert": { "trim": true }
    },
    "pubSubApp": {
      "type": "string",
      "description": "Cloud Pub/Sub app for Gmail API webhooks",
      "example": "AAAAAQAACnA",
      "enum": [false],
      "maxLength": 512
    },
    "extraScopes": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "User.Read",
        "maxLength": 255,
        "x-convert": { "trim": true }
      }
    },
    "skipScopes": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "SMTP.Send",
        "maxLength": 255,
        "x-convert": { "trim": true }
      }
    },
    "CreateOAuth2App": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Application name",
          "example": "My Gmail App",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "description": {
          "type": "string",
          "description": "Application description",
          "example": "My cool app",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "title": {
          "type": "string",
          "description": "Title for the application button",
          "example": "App title",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "provider": { "$ref": "#/definitions/provider" },
        "enabled": {
          "type": "boolean",
          "description": "Enable this app",
          "example": true,
          "default": false
        },
        "clientId": {
          "type": "string",
          "description": "Client or Application ID for 3-legged OAuth2 applications",
          "example": "52422112755-3uov8bjwlrullq122rdm6l8ui25ho7qf.apps.googleusercontent.com",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "clientSecret": {
          "type": "string",
          "description": "Client secret for 3-legged OAuth2 applications",
          "example": "boT7Q~dUljnfFdVuqpC11g8nGMjO8kpRAv-ZB",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "baseScopes": { "$ref": "#/definitions/baseScopes" },
        "pubSubApp": { "$ref": "#/definitions/pubSubApp" },
        "extraScopes": { "$ref": "#/definitions/extraScopes" },
        "skipScopes": { "$ref": "#/definitions/skipScopes" },
        "serviceClient": {
          "type": "string",
          "description": "Service client ID for 2-legged OAuth2 applications",
          "example": "7103296518315821565203",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "googleProjectId": { "$ref": "#/definitions/googleProjectId" },
        "googleWorkspaceAccounts": {
          "type": "boolean",
          "description": "Show only Google Workspace accounts on the OAuth2 login page",
          "example": false
        },
        "serviceClientEmail": {
          "type": "string",
          "description": "Service Client Email for 2-legged OAuth2 applications",
          "example": "name@project-123.iam.gserviceaccount.com",
          "x-format": { "email": true },
          "x-convert": { "trim": true }
        },
        "serviceKey": {
          "type": "string",
          "description": "PEM formatted service secret for 2-legged OAuth2 applications",
          "example": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgk...",
          "maxLength": 102400,
          "x-convert": { "trim": true }
        },
        "authority": {
          "type": "string",
          "description": "Authorization tenant value for Outlook OAuth2 applications",
          "example": "common",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "cloud": {
          "type": "string",
          "description": "Azure cloud type for Outlook OAuth2 applications",
          "example": "global",
          "x-convert": { "trim": true }
        },
        "redirectUrl": {
          "type": "string",
          "description": "Redirect URL for 3-legged OAuth2 applications",
          "example": "https://myservice.com/oauth",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        }
      },
      "required": [
        "name",
        "provider",
        "serviceClient",
        "serviceClientEmail",
        "serviceKey",
        "authority"
      ]
    },
    "CreateAppResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "OAuth2 application ID",
          "example": "AAABhaBPHscAAAAH",
          "maxLength": 256
        },
        "created": {
          "type": "boolean",
          "description": "Was the app created",
          "default": true
        }
      },
      "required": ["id"]
    },
    "Settings": {
      "type": "object",
      "properties": {
        "webhooksEnabled": {
          "type": "boolean",
          "description": "If set to false, webhooks will not be emitted"
        },
        "webhooks": {
          "type": "string",
          "description": "The URL where webhooks will be sent",
          "example": "https://myservice.com/imap/webhooks",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "webhookEvents": { "$ref": "#/definitions/webhookEvents" },
        "webhooksCustomHeaders": {
          "$ref": "#/definitions/WebhooksCustomHeaders"
        },
        "notifyHeaders": { "$ref": "#/definitions/notifyHeaders" },
        "serviceUrl": {
          "type": "string",
          "description": "The base URL of the EmailEngine service. If path is also provided then it is ignored.",
          "example": "https://emailengine.example.com",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "notificationBaseUrl": {
          "type": "string",
          "description": "Base URL of EmailEngine for receiving external notifications like MS Graph webhooks. Can contain a path value. Defaults to `serviceUrl` if not set.",
          "example": "https://emailengine.example.com",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "trackClicks": {
          "type": "boolean",
          "description": "If true, rewrites HTML links in sent emails to track link clicks"
        },
        "trackOpens": {
          "type": "boolean",
          "description": "If true, inserts a tracking beacon image in HTML emails to monitor email opens"
        },
        "imapIndexer": { "$ref": "#/definitions/imapIndexer" },
        "resolveGmailCategories": {
          "type": "boolean",
          "description": "Enables Gmail category tab detection for incoming emails when set to true. Applies only to Gmail IMAP accounts; Gmail API accounts automatically include category information"
        },
        "ignoreMailCertErrors": {
          "type": "boolean",
          "description": "If true, allows connections to servers with insecure or untrusted SSL/TLS certificates. Applies to both IMAP and SMTP connections. Use with caution"
        },
        "generateEmailSummary": {
          "type": "boolean",
          "description": "If true, generates a summary of the email using OpenAI ChatGPT"
        },
        "openAiAPIKey": {
          "type": "string",
          "description": "OpenAI API key",
          "example": "verysecret"
        },
        "openAiModel": {
          "type": "string",
          "description": "OpenAI API model",
          "example": "gpt-3.5-turbo"
        },
        "openAiAPIUrl": {
          "type": "string",
          "description": "OpenAI API URL",
          "example": "https://api.openai.com",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "documentStoreChatModel": {
          "type": "string",
          "description": "OpenAI API model for chat",
          "example": "gpt-3.5-turbo"
        },
        "openAiTemperature": {
          "type": "number",
          "description": "Controls the randomness of the OpenAI API responses. Higher values (up to 2) make output more random, while lower values make it more focused and deterministic",
          "example": 0.8,
          "minimum": 0,
          "maximum": 2
        },
        "openAiTopP": {
          "type": "number",
          "description": "Controls the cumulative probability for nucleus sampling in the OpenAI API. A value between 0 and 1",
          "example": 0.1,
          "minimum": 0,
          "maximum": 1
        },
        "openAiPrompt": {
          "type": "string",
          "description": "Prompt to send to the LLM for analyzing emails",
          "example": "You are an assistant scanning incoming emails...",
          "maxLength": 6144
        },
        "openAiGenerateEmbeddings": {
          "type": "boolean",
          "description": "If true, generates vector embeddings for the email"
        },
        "inboxNewOnly": {
          "type": "boolean",
          "description": "If true, sends \"New Email\" webhooks for incoming emails only"
        },
        "serviceSecret": {
          "type": "string",
          "description": "HMAC secret for signing public requests",
          "example": "verysecret"
        },
        "authServer": {
          "type": "string",
          "description": "The URL of the authentication server to fetch authentication data from",
          "example": "https://myservice.com/authentication",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "proxyEnabled": {
          "type": "boolean",
          "description": "If true, the global proxy is enabled"
        },
        "proxyUrl": {
          "type": "string",
          "description": "Proxy URL",
          "example": "socks://proxy.example.com:1080",
          "x-format": {
            "uri": {
              "scheme": ["http", "https", "socks", "socks4", "socks5"],
              "allowRelative": false
            }
          }
        },
        "smtpEhloName": {
          "type": "string",
          "description": "Hostname to use for the SMTP EHLO/HELO greeting",
          "example": "my.proxy.tld",
          "x-format": { "hostname": true }
        },
        "notifyText": {
          "type": "boolean",
          "description": "Include message text in webhook notifications"
        },
        "notifyWebSafeHtml": {
          "type": "boolean",
          "description": "Pre-process HTML in webhook notifications to be web-safe"
        },
        "notifyTextSize": {
          "type": "integer",
          "description": "Maximum size of message text to include in webhook notifications (in bytes)",
          "minimum": 0
        },
        "notifyAttachments": {
          "type": "boolean",
          "description": "Include attachments in webhook notifications"
        },
        "notifyAttachmentSize": {
          "type": "integer",
          "description": "Maximum size of attachment to include in webhook notifications (in bytes)",
          "minimum": 0
        },
        "notifyCalendarEvents": {
          "type": "boolean",
          "description": "Include calendar events in webhook notifications"
        },
        "logs": { "$ref": "#/definitions/LogSettings" },
        "imapStrategy": { "$ref": "#/definitions/imapStrategy" },
        "smtpStrategy": { "$ref": "#/definitions/smtpStrategy" },
        "localAddresses": { "$ref": "#/definitions/localAddresses" },
        "smtpServerEnabled": {
          "type": "boolean",
          "description": "Enable SMTP interface"
        },
        "smtpServerPort": {
          "type": "integer",
          "description": "SMTP interface port",
          "minimum": 0,
          "maximum": 65536
        },
        "smtpServerHost": {
          "type": "string",
          "description": "SMTP host to bind to",
          "x-format": {
            "ip": { "cidr": "forbidden", "version": ["ipv4", "ipv6"] }
          }
        },
        "smtpServerProxy": {
          "type": "boolean",
          "description": "Enable PROXY protocol for SMTP server"
        },
        "smtpServerAuthEnabled": {
          "type": "boolean",
          "description": "Enable SMTP authentication"
        },
        "smtpServerPassword": {
          "type": "string",
          "description": "SMTP client password. Set to `null` to disable",
          "maxLength": 1024
        },
        "smtpServerTLSEnabled": {
          "type": "boolean",
          "description": "Enable TLS for the SMTP interface. Requires a valid certificate"
        },
        "imapProxyServerEnabled": {
          "type": "boolean",
          "description": "Enable IMAP proxy interface"
        },
        "imapProxyServerPort": {
          "type": "integer",
          "description": "IMAP proxy interface port",
          "minimum": 0,
          "maximum": 65536
        },
        "imapProxyServerHost": {
          "type": "string",
          "description": "IMAP proxy host to bind to",
          "x-format": {
            "ip": { "cidr": "forbidden", "version": ["ipv4", "ipv6"] }
          }
        },
        "imapProxyServerProxy": {
          "type": "boolean",
          "description": "Enable PROXY protocol for the IMAP proxy server"
        },
        "imapProxyServerPassword": {
          "type": "string",
          "description": "IMAP proxy client password. Set to `null` to disable",
          "maxLength": 1024
        },
        "imapProxyServerTLSEnabled": {
          "type": "boolean",
          "description": "Enable TLS for the IMAP proxy interface. Requires a valid certificate"
        },
        "queueKeep": {
          "type": "integer",
          "description": "Number of completed or failed queue entries to keep",
          "minimum": 0
        },
        "deliveryAttempts": {
          "type": "integer",
          "description": "Number of times to retry sending an email before it is considered as failed",
          "minimum": 0
        },
        "templateHeader": {
          "type": "string",
          "description": "HTML code displayed at the top of public pages like the hosted authentication form",
          "maxLength": 1048576,
          "x-convert": { "trim": true }
        },
        "templateHtmlHead": {
          "type": "string",
          "description": "HTML code added to the HEAD tag of public pages like the hosted authentication form",
          "maxLength": 1048576,
          "x-convert": { "trim": true }
        },
        "scriptEnv": {
          "type": "string",
          "description": "JSON object to be used as the `env` variable in pre-processing scripts",
          "example": "{\"key\": \"value\"}",
          "maxLength": 1048576,
          "x-convert": { "trim": true }
        },
        "enableApiProxy": {
          "type": "boolean",
          "description": "Enable support for reverse proxies"
        },
        "locale": { "$ref": "#/definitions/locale" },
        "timezone": {
          "type": "string",
          "description": "Default timezone identifier",
          "example": "Europe/Tallinn",
          "maxLength": 100
        },
        "pageBrandName": {
          "type": "string",
          "description": "Brand name to use in the HTML title element",
          "example": "EmailEngine",
          "maxLength": 1024
        },
        "openAiPreProcessingFn": {
          "type": "string",
          "description": "Filter function for LLM pre-processing (JavaScript)",
          "example": "return true; // passes all emails",
          "maxLength": 524288
        }
      }
    },
    "UpdatedSettings": {
      "type": "array",
      "description": "List of updated setting keys",
      "items": { "type": "string", "example": "notifyHeaders" }
    },
    "SettingsUpdatedResponse": {
      "type": "object",
      "properties": { "updated": { "$ref": "#/definitions/UpdatedSettings" } }
    },
    "TokenScope": { "type": "string", "enum": ["api", "smtp", "imap-proxy"] },
    "Scopes": {
      "type": "array",
      "default": ["api"],
      "x-constraint": { "single": true },
      "items": { "$ref": "#/definitions/TokenScope" }
    },
    "CreateToken": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "description": {
          "type": "string",
          "description": "Token description",
          "example": "Token description",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "scopes": { "$ref": "#/definitions/Scopes" },
        "metadata": {
          "type": "string",
          "description": "Related metadata in JSON format",
          "example": "{\"example\": \"value\"}",
          "maxLength": 1048576
        },
        "restrictions": { "$ref": "#/definitions/TokenRestrictions" },
        "ip": {
          "type": "string",
          "description": "IP address of the requester",
          "example": "127.0.0.1",
          "x-format": {
            "ip": { "cidr": "forbidden", "version": ["ipv4", "ipv6"] }
          },
          "x-convert": { "trim": true }
        }
      },
      "required": ["account", "description", "scopes"]
    },
    "CreateTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "Access token",
          "example": "123456",
          "x-constraint": { "length": 64 },
          "x-format": { "hex": { "byteAligned": false, "prefix": false } }
        }
      },
      "required": ["token"]
    },
    "VerifyAccount": {
      "type": "object",
      "properties": {
        "mailboxes": {
          "type": "boolean",
          "description": "Include mailbox listing in response",
          "example": false,
          "default": false
        },
        "imap": { "$ref": "#/definitions/ImapConfiguration" },
        "smtp": { "$ref": "#/definitions/SmtpConfiguration" },
        "proxy": {
          "type": "string",
          "description": "Proxy URL",
          "example": "socks://proxy.example.com:1080",
          "x-format": {
            "uri": {
              "scheme": ["http", "https", "socks", "socks4", "socks5"],
              "allowRelative": false
            }
          }
        },
        "smtpEhloName": {
          "type": "string",
          "description": "Hostname to use for the SMTP EHLO/HELO greeting",
          "example": "my.proxy.tld",
          "x-format": { "hostname": true }
        }
      }
    },
    "imap": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Was IMAP account verified",
          "example": true
        },
        "error": {
          "type": "string",
          "description": "Error messages for IMAP verification. Only present if success=false",
          "example": "Something went wrong"
        },
        "code": {
          "type": "string",
          "description": "Error code. Only present if success=false",
          "example": "ERR_SSL_WRONG_VERSION_NUMBER"
        }
      }
    },
    "smtp": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Was SMTP account verified",
          "example": true
        },
        "error": {
          "type": "string",
          "description": "Error messages for SMTP verification. Only present if success=false",
          "example": "Something went wrong"
        },
        "code": {
          "type": "string",
          "description": "Error code. Only present if success=false",
          "example": "ERR_SSL_WRONG_VERSION_NUMBER"
        }
      }
    },
    "MailboxShortResponseItem": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Full path to the mailbox",
          "example": "Kalender/S&APw-nnip&AOQ-evad"
        },
        "delimiter": {
          "type": "string",
          "description": "Hierarchy delimiter used in the mailbox path",
          "example": "/"
        },
        "parentPath": {
          "type": "string",
          "description": "Full path to the parent mailbox",
          "example": "Kalender"
        },
        "name": {
          "type": "string",
          "description": "Name of the mailbox",
          "example": "Sünnipäevad"
        },
        "listed": {
          "type": "boolean",
          "description": "True if the mailbox was returned in response to the LIST command",
          "example": true
        },
        "subscribed": {
          "type": "boolean",
          "description": "True if the mailbox was returned in response to the LSUB command",
          "example": true
        },
        "specialUse": { "$ref": "#/definitions/MailboxSpecialUse" }
      },
      "required": ["path", "parentPath", "name"]
    },
    "mailboxes": {
      "type": "array",
      "items": { "$ref": "#/definitions/MailboxShortResponseItem" }
    },
    "VerifyAccountResponse": {
      "type": "object",
      "properties": {
        "imap": { "$ref": "#/definitions/imap" },
        "smtp": { "$ref": "#/definitions/smtp" },
        "mailboxes": { "$ref": "#/definitions/mailboxes" }
      }
    },
    "AccountFormPath": {
      "type": "array",
      "description": "Specifies which mailbox folders to monitor for changes. The wildcard \"*\" includes all folders (also the default). Although you can still make API requests to folders not listed here, you will not receive webhooks for changes in those unlisted folders.",
      "example": ["*"],
      "x-constraint": { "single": true },
      "items": {
        "type": "string",
        "description": "Check changes only on selected paths. Either a single string path or an array of paths. Can use references like \"\\Sent\" or \"\\Inbox\". Set to `null` to unset.",
        "example": "INBOX",
        "maxLength": 1024
      }
    },
    "DefaultAccountType": {
      "type": "string",
      "description": "Display the form for the specified account type (either \"imap\" or an OAuth2 app ID) instead of allowing the user to choose",
      "example": "imap",
      "default": false,
      "enum": [false]
    },
    "RequestAuthForm": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Account ID. If set to `null`, a unique ID will be generated automatically. If you provide an existing account ID, the settings for that account will be updated instead",
          "example": "example",
          "default": null,
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "name": {
          "type": "string",
          "description": "Display name for the account",
          "example": "My Email Account",
          "maxLength": 256
        },
        "email": {
          "type": "string",
          "description": "Specifies the default email address for this account. Users can change it if needed.",
          "example": "user@example.com",
          "x-format": { "email": true }
        },
        "delegated": {
          "type": "boolean",
          "description": "If true, configures this account as a shared mailbox. Currently supported by MS365 OAuth2 accounts",
          "default": false
        },
        "notifyFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Send webhooks for messages starting from provided date. The default is the account creation date. Only applies for IMAP accounts.",
          "example": "2021-07-08T07:06:34.336Z"
        },
        "subconnections": { "$ref": "#/definitions/SubconnectionPaths" },
        "path": { "$ref": "#/definitions/AccountFormPath" },
        "redirectUrl": {
          "type": "string",
          "description": "After the authentication process is completed, the user is redirected to this URL",
          "example": "https://myapp/account/settings.php",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "type": { "$ref": "#/definitions/DefaultAccountType" }
      },
      "required": ["redirectUrl"]
    },
    "RequestAuthFormResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Generated URL to the hosted authentication form",
          "example": "https://ee.example.com/accounts/new?data=eyJhY2NvdW50IjoiZXhh...L0W_BkFH5HW6Krwmr7c&type=imap",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        }
      },
      "required": ["url"]
    },
    "BlocklistListAddPayload": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "recipient": {
          "type": "string",
          "description": "Email address to add to the list",
          "example": "user@example.com",
          "x-format": { "email": true }
        },
        "reason": {
          "type": "string",
          "description": "Identifier for the blocking reason",
          "default": "block"
        }
      },
      "required": ["account", "recipient"]
    },
    "BlocklistListAddResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Was the request successful",
          "example": true
        },
        "added": {
          "type": "boolean",
          "description": "Was the address added to the list",
          "example": true
        }
      }
    },
    "CreateTemplateContent": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string",
          "description": "Message subject",
          "example": "What a wonderful message",
          "maxLength": 10240,
          "x-convert": { "trim": true }
        },
        "text": {
          "type": "string",
          "description": "Plaintext content of the message",
          "example": "Hello from myself!",
          "maxLength": 5242880,
          "x-convert": { "trim": true }
        },
        "html": {
          "type": "string",
          "description": "HTML content of the message",
          "example": "<p>Hello from myself!</p>",
          "maxLength": 5242880,
          "x-convert": { "trim": true }
        },
        "previewText": {
          "type": "string",
          "description": "Preview text that appears in the inbox after the subject line",
          "example": "Welcome to our newsletter!",
          "maxLength": 1024
        }
      }
    },
    "CreateTemplate": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Account ID. Use `null` for public templates.",
          "example": "example",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "name": {
          "type": "string",
          "description": "Name of the template",
          "example": "Transaction receipt",
          "maxLength": 256
        },
        "description": {
          "type": "string",
          "description": "Optional description of the template",
          "example": "Something about the template",
          "maxLength": 1024
        },
        "format": { "$ref": "#/definitions/format" },
        "content": { "$ref": "#/definitions/CreateTemplateContent" }
      },
      "required": ["account", "name", "content"]
    },
    "CreateTemplateResponse": {
      "type": "object",
      "properties": {
        "created": {
          "type": "boolean",
          "description": "Was the template created or not"
        },
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "id": {
          "type": "string",
          "description": "Template ID",
          "example": "example",
          "maxLength": 256
        }
      },
      "required": ["account", "id"]
    },
    "Flags": {
      "type": "array",
      "description": "Message flags",
      "example": ["\\Seen", "\\Draft"],
      "items": { "type": "string", "maxLength": 128 }
    },
    "action": {
      "type": "string",
      "description": "Specifies the action. Valid values: 'forward', 'reply', 'reply-all'. For 'reply' and 'forward', if a 'to' field is provided in the request, it overrides the original recipient. For 'reply-all', EmailEngine merges to/cc/bcc from the original email and the request.",
      "example": "reply",
      "default": "reply",
      "enum": ["forward", "reply", "reply-all"],
      "x-convert": { "case": "lower" }
    },
    "MessageReference": {
      "type": "object",
      "description": "Contains options for replying to or forwarding an email.",
      "properties": {
        "message": {
          "type": "string",
          "description": "EmailEngine internal ID of the referenced message (not the Message-ID in email headers).",
          "example": "AAAAAQAACnA",
          "maxLength": 256
        },
        "action": { "$ref": "#/definitions/action" },
        "inline": {
          "type": "boolean",
          "description": "If set to true, includes the original message content as blockquoted text.",
          "default": false
        },
        "forwardAttachments": {
          "type": "boolean",
          "description": "If set to true, includes the original attachments in the forwarded message.",
          "default": false
        },
        "ignoreMissing": {
          "type": "boolean",
          "description": "If set to true, continues even if the referenced message is missing.",
          "default": false
        },
        "messageId": {
          "type": "string",
          "description": "Optional check for the referenced email's Message-ID. If set, only proceeds when the referenced email's Message-ID matches this value, otherwise returns an error.",
          "example": "<test123@example.com>",
          "maxLength": 996
        }
      },
      "required": ["message"]
    },
    "Model3": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Some Name",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "address": {
          "type": "string",
          "example": "user@example.com",
          "x-format": { "email": { "ignoreLength": false } }
        }
      },
      "required": ["address"]
    },
    "Model4": {
      "type": "array",
      "description": "List of addresses",
      "example": [{ "address": "recipient@example.com" }],
      "x-constraint": { "single": true },
      "items": { "$ref": "#/definitions/Model3" }
    },
    "Model5": {
      "type": "array",
      "description": "List of addresses",
      "x-constraint": { "single": true },
      "items": { "$ref": "#/definitions/Model3" }
    },
    "Model6": {
      "type": "array",
      "description": "List of addresses",
      "x-constraint": { "single": true },
      "items": { "$ref": "#/definitions/Model3" }
    },
    "contentDisposition": {
      "type": "string",
      "enum": ["inline", "attachment"],
      "x-convert": { "case": "lower" }
    },
    "encoding": { "type": "string", "default": "base64", "enum": ["base64"] },
    "reference": {
      "type": "string",
      "description": "References an existing attachment by its ID instead of providing new attachment content. If this field is set, the `content` field must not be included. If not set, the `content` field is required.",
      "example": "AAAAAQAACnAcde",
      "enum": [false],
      "maxLength": 256
    },
    "UploadAttachment": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string",
          "example": "transparent.gif",
          "maxLength": 256
        },
        "content": {
          "type": "string",
          "description": "Base64 formatted attachment file",
          "example": "R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=",
          "maxLength": 5242880
        },
        "contentType": {
          "type": "string",
          "example": "image/gif",
          "maxLength": 256,
          "x-convert": { "case": "lower" }
        },
        "contentDisposition": { "$ref": "#/definitions/contentDisposition" },
        "cid": {
          "type": "string",
          "description": "Content-ID value for embedded images",
          "example": "unique-image-id@localhost",
          "maxLength": 256
        },
        "encoding": { "$ref": "#/definitions/encoding" },
        "reference": { "$ref": "#/definitions/reference" }
      },
      "required": ["content"]
    },
    "UploadAttachmentList": {
      "type": "array",
      "description": "List of attachments",
      "items": { "$ref": "#/definitions/UploadAttachment" }
    },
    "CustomHeaders": {
      "type": "object",
      "description": "Custom Headers",
      "example": { "X-My-Custom-Header": "Custom header value" }
    },
    "MessageUpload": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Target mailbox folder path",
          "example": "INBOX"
        },
        "flags": { "$ref": "#/definitions/Flags" },
        "internalDate": {
          "type": "string",
          "format": "date-time",
          "description": "Sets the internal date for this message",
          "example": "2021-07-08T07:06:34.336Z"
        },
        "reference": { "$ref": "#/definitions/MessageReference" },
        "raw": {
          "type": "string",
          "description": "A Base64-encoded email message in RFC 822 format. If you provide other fields along with raw, those fields will override the corresponding values in the raw message.",
          "example": "TUlNRS1WZXJzaW9uOiAxLjANClN1YmplY3Q6IGhlbGxvIHdvcmxkDQoNCkhlbGxvIQ0K",
          "maxLength": 5242880
        },
        "from": { "$ref": "#/definitions/FromAddress" },
        "to": { "$ref": "#/definitions/Model4" },
        "cc": { "$ref": "#/definitions/Model5" },
        "bcc": { "$ref": "#/definitions/Model6" },
        "subject": {
          "type": "string",
          "description": "Message subject",
          "example": "What a wonderful message",
          "maxLength": 10240
        },
        "text": {
          "type": "string",
          "description": "Message Text",
          "example": "Hello from myself!",
          "maxLength": 5242880
        },
        "html": {
          "type": "string",
          "description": "Message HTML",
          "example": "<p>Hello from myself!</p>",
          "maxLength": 5242880
        },
        "attachments": { "$ref": "#/definitions/UploadAttachmentList" },
        "messageId": {
          "type": "string",
          "description": "Message ID",
          "example": "<test123@example.com>",
          "maxLength": 996
        },
        "headers": { "$ref": "#/definitions/CustomHeaders" },
        "locale": {
          "type": "string",
          "description": "Optional locale",
          "example": "fr",
          "maxLength": 100
        },
        "tz": {
          "type": "string",
          "description": "Optional timezone",
          "example": "Europe/Tallinn",
          "maxLength": 100
        }
      },
      "required": ["path"]
    },
    "ResponseReference": {
      "type": "object",
      "description": "Reference info if referencing was requested",
      "properties": {
        "message": {
          "type": "string",
          "description": "Referenced message ID",
          "example": "AAAAAQAACnA",
          "maxLength": 256
        },
        "success": {
          "type": "boolean",
          "description": "Was the referenced message processed",
          "example": true
        },
        "error": {
          "type": "string",
          "description": "An error message if referenced message processing failed",
          "example": "Referenced message was not found"
        }
      },
      "required": ["message"]
    },
    "MessageUploadResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the message. NB! This and other fields might not be present if server did not provide enough information",
          "example": "AAAAAgAACrI"
        },
        "path": {
          "type": "string",
          "description": "Folder this message was uploaded to",
          "example": "INBOX"
        },
        "uid": {
          "type": "integer",
          "description": "UID of uploaded message",
          "example": 12345
        },
        "uidValidity": {
          "type": "string",
          "description": "UIDVALIDTITY of the target folder. Numeric value cast as string.",
          "example": "12345"
        },
        "seq": {
          "type": "integer",
          "description": "Sequence number of uploaded message",
          "example": 12345
        },
        "messageId": {
          "type": "string",
          "description": "Message ID",
          "example": "<test123@example.com>",
          "maxLength": 996
        },
        "reference": { "$ref": "#/definitions/ResponseReference" }
      }
    },
    "MailboxPath": {
      "type": "array",
      "description": "Mailbox path as an array or a string. If account is namespaced then namespace prefix is added by default.",
      "example": ["Parent folder", "Subfolder"],
      "x-constraint": { "single": true },
      "items": { "type": "string", "maxLength": 256 }
    },
    "CreateMailbox": {
      "type": "object",
      "properties": { "path": { "$ref": "#/definitions/MailboxPath" } }
    },
    "CreateMailboxResponse": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Full path to mailbox",
          "example": "Kalender/S&APw-nnip&AOQ-evad"
        },
        "mailboxId": {
          "type": "string",
          "description": "Mailbox ID (if server has support)",
          "example": "1439876283476"
        },
        "created": {
          "type": "boolean",
          "description": "Was the mailbox created",
          "example": true
        }
      },
      "required": ["path"]
    },
    "Headers": {
      "type": "object",
      "description": "Headers to match against",
      "example": { "Message-ID": "<1DAF52A51E674A2@example.com>" }
    },
    "SearchQuery": {
      "type": "object",
      "description": "Search query to filter messages",
      "properties": {
        "seq": {
          "type": "string",
          "description": "Sequence number range. Only supported for IMAP accounts.",
          "maxLength": 8192
        },
        "answered": {
          "type": "boolean",
          "description": "Check if message is answered or not. Only supported for IMAP accounts."
        },
        "deleted": {
          "type": "boolean",
          "description": "Check if message is marked for deletion or not. Only supported for IMAP accounts."
        },
        "draft": {
          "type": "boolean",
          "description": "Check if message is a draft."
        },
        "unseen": {
          "type": "boolean",
          "description": "Check if message is marked as unseen."
        },
        "flagged": {
          "type": "boolean",
          "description": "Check if message is flagged or not."
        },
        "seen": {
          "type": "boolean",
          "description": "Check if message is marked as seen."
        },
        "from": {
          "type": "string",
          "description": "Match From: header",
          "maxLength": 256
        },
        "to": {
          "type": "string",
          "description": "Match To: header. Not supported for MS Graph API accounts.",
          "maxLength": 256
        },
        "cc": {
          "type": "string",
          "description": "Match Cc: header. Not supported for MS Graph API accounts.",
          "maxLength": 256
        },
        "bcc": {
          "type": "string",
          "description": "Match Bcc: header. Not supported for MS Graph API accounts.",
          "maxLength": 256
        },
        "body": {
          "type": "string",
          "description": "Match text body",
          "maxLength": 256
        },
        "subject": {
          "type": "string",
          "description": "Match message subject",
          "example": "Hello world",
          "maxLength": 2560
        },
        "larger": {
          "type": "integer",
          "description": "Matches messages larger than value in bytes. Not supported for MS Graph API accounts.",
          "minimum": 0,
          "maximum": 1073741824
        },
        "smaller": {
          "type": "integer",
          "description": "Matches messages smaller than value in bytes. Not supported for MS Graph API accounts.",
          "minimum": 0,
          "maximum": 1073741824
        },
        "uid": {
          "type": "string",
          "description": "UID range. Only supported for IMAP accounts.",
          "maxLength": 8192
        },
        "modseq": {
          "type": "integer",
          "description": "Matches messages with modseq higher than value. Only supported for IMAP accounts.",
          "minimum": 0
        },
        "before": {
          "type": "string",
          "format": "date",
          "description": "Matches messages received before date"
        },
        "since": {
          "type": "string",
          "format": "date",
          "description": "Matches messages received after date"
        },
        "sentBefore": {
          "type": "string",
          "format": "date",
          "description": "Matches messages sent before date"
        },
        "sentSince": {
          "type": "string",
          "format": "date",
          "description": "Matches messages sent after date"
        },
        "emailId": {
          "type": "string",
          "description": "Match specific Gmail unique email ID",
          "example": "1278455344230334865",
          "maxLength": 256
        },
        "threadId": {
          "type": "string",
          "description": "Match specific Gmail unique thread ID",
          "example": "1278455344230334865",
          "maxLength": 256
        },
        "header": { "$ref": "#/definitions/Headers" },
        "gmailRaw": {
          "type": "string",
          "description": "Raw Gmail search string. Will return an error if used for other account types.",
          "example": "has:attachment in:unread",
          "maxLength": 1024
        }
      }
    },
    "Model7": {
      "type": "object",
      "example": {
        "search": {
          "unseen": true,
          "flagged": true,
          "from": "nyan.cat@example.com",
          "body": "Hello world",
          "subject": "Hello world",
          "sentBefore": "2024-08-09",
          "sentSince": "2022-08-09",
          "emailId": "1278455344230334865",
          "threadId": "1266894439832287888",
          "header": { "Message-ID": "<12345@example.com>" },
          "gmailRaw": "has:attachment in:unread"
        }
      },
      "properties": { "search": { "$ref": "#/definitions/SearchQuery" } },
      "required": ["search"]
    },
    "Model8": {
      "type": "array",
      "x-constraint": { "single": true },
      "items": {
        "type": "string",
        "example": "recipient@example.com",
        "x-format": { "email": true }
      }
    },
    "SMTPEnvelope": {
      "type": "object",
      "description": "An optional object specifying the SMTP envelope used during email transmission. If not provided, the envelope is automatically derived from the email's message headers. This is useful when you need the envelope addresses to differ from those in the email headers.",
      "properties": {
        "from": {
          "type": "string",
          "example": "sender@example.com",
          "x-format": { "email": true }
        },
        "to": { "$ref": "#/definitions/Model8" }
      }
    },
    "ReplyToAddress": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Some Name",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "address": {
          "type": "string",
          "example": "user@example.com",
          "x-format": { "email": { "ignoreLength": false } }
        }
      },
      "required": ["address"]
    },
    "ReplyTo": {
      "type": "array",
      "description": "List of Reply-To addresses",
      "example": [{ "name": "From Me", "address": "sender@example.com" }],
      "x-constraint": { "single": true },
      "items": { "$ref": "#/definitions/ReplyToAddress" }
    },
    "ToAddress": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Some Name",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "address": {
          "type": "string",
          "example": "user@example.com",
          "x-format": { "email": { "ignoreLength": false } }
        }
      },
      "required": ["address"]
    },
    "ToAddressList": {
      "type": "array",
      "description": "List of recipient addresses",
      "example": [{ "address": "recipient@example.com" }],
      "x-constraint": { "single": true },
      "items": { "$ref": "#/definitions/ToAddress" }
    },
    "CcAddress": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Some Name",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "address": {
          "type": "string",
          "example": "user@example.com",
          "x-format": { "email": { "ignoreLength": false } }
        }
      },
      "required": ["address"]
    },
    "CcAddressList": {
      "type": "array",
      "description": "List of CC addresses",
      "x-constraint": { "single": true },
      "items": { "$ref": "#/definitions/CcAddress" }
    },
    "BccAddress": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Some Name",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "address": {
          "type": "string",
          "example": "user@example.com",
          "x-format": { "email": { "ignoreLength": false } }
        }
      },
      "required": ["address"]
    },
    "BccAddressList": {
      "type": "array",
      "description": "List of BCC addresses",
      "x-constraint": { "single": true },
      "items": { "$ref": "#/definitions/BccAddress" }
    },
    "RenderValues": {
      "type": "object",
      "description": "An object of variables for the template renderer"
    },
    "TemplateRender": {
      "type": "object",
      "description": "Template rendering options",
      "enum": [false],
      "properties": {
        "format": { "$ref": "#/definitions/format" },
        "params": { "$ref": "#/definitions/RenderValues" }
      }
    },
    "MailMergeListEntry": {
      "type": "object",
      "properties": {
        "to": { "$ref": "#/definitions/ToAddress" },
        "messageId": {
          "type": "string",
          "description": "Message ID",
          "example": "<test123@example.com>",
          "maxLength": 996
        },
        "params": { "$ref": "#/definitions/RenderValues" },
        "sendAt": {
          "type": "string",
          "format": "date-time",
          "description": "Send message at specified time. Overrides message level `sendAt` value.",
          "example": "2021-07-08T07:06:34.336Z"
        }
      },
      "required": ["to"]
    },
    "MailMergeList": {
      "type": "array",
      "description": "Mail merge options. A separate email is generated for each recipient. Using mail merge disables `messageId`, `envelope`, `to`, `cc`, `bcc`, `render` keys for the message root.",
      "minItems": 1,
      "items": { "$ref": "#/definitions/MailMergeListEntry" }
    },
    "return": {
      "type": "string",
      "description": "Specifies if only headers or the entire body of the message should be included in the response (RET)",
      "enum": ["headers", "full"],
      "x-convert": { "trim": true }
    },
    "NotifyEntry": {
      "type": "string",
      "enum": ["never", "success", "failure", "delay"]
    },
    "notify": {
      "type": "array",
      "description": "Defines the conditions under which a DSN response should be sent",
      "x-constraint": { "single": true },
      "items": { "$ref": "#/definitions/NotifyEntry" }
    },
    "DSN": {
      "type": "object",
      "description": "Request DSN notifications",
      "properties": {
        "id": {
          "type": "string",
          "description": "The envelope identifier that would be included in the response (ENVID)",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "return": { "$ref": "#/definitions/return" },
        "notify": { "$ref": "#/definitions/notify" },
        "recipient": {
          "type": "string",
          "description": "The email address the DSN should be sent (ORCPT)",
          "x-format": { "email": true },
          "x-convert": { "trim": true }
        }
      },
      "required": ["return"]
    },
    "SubmitMessage": {
      "type": "object",
      "example": {
        "to": [{ "name": "Nyan Cat", "address": "nyan.cat@example.com" }],
        "subject": "What a wonderful message!",
        "text": "Hello from myself!",
        "html": "<p>Hello from myself!</p>",
        "attachments": [
          {
            "filename": "transparent.gif",
            "content": "R0lGODlhAQABAIAAAP///wAAACwAAAAAAQABAAACAkQBADs=",
            "contentType": "image/gif"
          }
        ]
      },
      "properties": {
        "reference": { "$ref": "#/definitions/MessageReference" },
        "envelope": { "$ref": "#/definitions/SMTPEnvelope" },
        "raw": {
          "type": "string",
          "description": "A Base64-encoded email message in RFC 822 format. If you provide other fields along with raw, those fields will override the corresponding values in the raw message.",
          "example": "TUlNRS1WZXJzaW9uOiAxLjANClN1YmplY3Q6IGhlbGxvIHdvcmxkDQoNCkhlbGxvIQ0K",
          "maxLength": 5242880
        },
        "from": { "$ref": "#/definitions/FromAddress" },
        "replyTo": { "$ref": "#/definitions/ReplyTo" },
        "to": { "$ref": "#/definitions/ToAddressList" },
        "cc": { "$ref": "#/definitions/CcAddressList" },
        "bcc": { "$ref": "#/definitions/BccAddressList" },
        "subject": {
          "type": "string",
          "description": "Message subject",
          "example": "What a wonderful message",
          "maxLength": 10240,
          "x-convert": { "trim": true }
        },
        "text": {
          "type": "string",
          "description": "Plaintext content of the message",
          "example": "Hello from myself!",
          "maxLength": 5242880,
          "x-convert": { "trim": true }
        },
        "html": {
          "type": "string",
          "description": "HTML content of the message",
          "example": "<p>Hello from myself!</p>",
          "maxLength": 5242880,
          "x-convert": { "trim": true }
        },
        "previewText": {
          "type": "string",
          "description": "Preview text that appears in the inbox after the subject line",
          "example": "Welcome to our newsletter!",
          "maxLength": 1024
        },
        "template": {
          "type": "string",
          "description": "Stored template ID to load the email content from",
          "example": "example",
          "maxLength": 256
        },
        "render": { "$ref": "#/definitions/TemplateRender" },
        "mailMerge": { "$ref": "#/definitions/MailMergeList" },
        "attachments": { "$ref": "#/definitions/UploadAttachmentList" },
        "messageId": {
          "type": "string",
          "description": "Message ID",
          "example": "<test123@example.com>",
          "maxLength": 996
        },
        "headers": { "$ref": "#/definitions/CustomHeaders" },
        "trackOpens": {
          "type": "boolean",
          "description": "Should EmailEngine track opens for this message",
          "example": false
        },
        "trackClicks": {
          "type": "boolean",
          "description": "Should EmailEngine track clicks for this message",
          "example": false
        },
        "copy": {
          "type": "boolean",
          "description": "If set then either copies the message to the Sent Mail folder or not. If not set then uses the account's default setting.",
          "example": null
        },
        "sentMailPath": {
          "type": "string",
          "description": "Upload sent message to this folder. By default the account's Sent Mail folder is used.",
          "example": "Sent Mail",
          "maxLength": 1024
        },
        "locale": {
          "type": "string",
          "description": "Optional locale",
          "example": "fr",
          "maxLength": 100
        },
        "tz": {
          "type": "string",
          "description": "Optional timezone",
          "example": "Europe/Tallinn",
          "maxLength": 100
        },
        "sendAt": {
          "type": "string",
          "format": "date-time",
          "description": "Send message at specified time",
          "example": "2021-07-08T07:06:34.336Z"
        },
        "deliveryAttempts": {
          "type": "integer",
          "description": "How many delivery attempts to make until message is considered as failed",
          "example": 10
        },
        "gateway": {
          "type": "string",
          "description": "Optional SMTP gateway ID for message routing",
          "example": "example",
          "maxLength": 256
        },
        "listId": {
          "type": "string",
          "description": "List ID for Mail Merge. Must use a subdomain name format. Lists are registered ad-hoc, so a new identifier defines a new list.",
          "example": "test-list",
          "x-format": { "hostname": true }
        },
        "dsn": { "$ref": "#/definitions/DSN" },
        "baseUrl": {
          "type": "string",
          "description": "Optional base URL for trackers. This URL must point to your EmailEngine instance.",
          "example": "https://customer123.myservice.com",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          },
          "x-convert": { "trim": true }
        },
        "proxy": {
          "type": "string",
          "description": "Optional proxy URL to use when connecting to the SMTP server",
          "example": "socks://proxy.example.com:1080",
          "x-format": {
            "uri": {
              "scheme": ["http", "https", "socks", "socks4", "socks5"],
              "allowRelative": false
            }
          }
        },
        "localAddress": {
          "type": "string",
          "description": "Optional local IP address to bind to when connecting to the SMTP server",
          "example": "127.0.0.1",
          "x-format": {
            "ip": { "cidr": "forbidden", "version": ["ipv4", "ipv6"] }
          },
          "x-convert": { "trim": true }
        },
        "dryRun": {
          "type": "boolean",
          "description": "If true, then EmailEngine does not send the email and returns an RFC822 formatted email file. Tracking information is not added to the email.",
          "default": false
        }
      }
    },
    "Model9": {
      "type": "object",
      "description": "Reference info if referencing was requested",
      "properties": {
        "message": {
          "type": "string",
          "description": "Referenced message ID",
          "example": "AAAAAQAACnA",
          "maxLength": 256
        },
        "success": {
          "type": "boolean",
          "description": "Was the referenced message processed successfully",
          "example": true
        },
        "error": {
          "type": "string",
          "description": "An error message if referenced message processing failed",
          "example": "Referenced message was not found"
        }
      },
      "required": ["message"]
    },
    "ToAddressSingle": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Some Name",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "address": {
          "type": "string",
          "example": "user@example.com",
          "x-format": { "email": { "ignoreLength": false } }
        }
      },
      "required": ["address"]
    },
    "Model10": {
      "type": "object",
      "description": "Reference info if referencing was requested",
      "properties": {
        "message": {
          "type": "string",
          "description": "Referenced message ID",
          "example": "AAAAAQAACnA",
          "maxLength": 256
        },
        "success": {
          "type": "boolean",
          "description": "Was the referenced message processed successfully",
          "example": true
        },
        "error": {
          "type": "string",
          "description": "An error message if referenced message processing failed",
          "example": "Referenced message was not found"
        }
      },
      "required": ["message"]
    },
    "skipped": {
      "type": "object",
      "description": "Info about skipped message. If this value is set, then the message was not sent",
      "properties": {
        "reason": {
          "type": "string",
          "description": "Why this message was skipped",
          "example": "unsubscribe"
        },
        "listId": { "type": "string", "example": "test-list" }
      }
    },
    "BulkResponseEntry": {
      "type": "object",
      "example": {
        "success": true,
        "to": { "name": "Andris 2", "address": "andris@ethereal.email" },
        "messageId": "<19b9c433-d428-f6d8-1d00-d666ebcadfc4@ekiri.ee>",
        "queueId": "1812477338914c8372a",
        "reference": { "message": "AAAAAQAACnA", "success": true },
        "sendAt": "2021-07-08T07:06:34.336Z"
      },
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Was the referenced message processed successfully",
          "example": true
        },
        "to": { "$ref": "#/definitions/ToAddressSingle" },
        "messageId": {
          "type": "string",
          "description": "Message ID",
          "example": "<test123@example.com>",
          "maxLength": 996
        },
        "queueId": {
          "type": "string",
          "description": "Queue identifier for scheduled email. Not present for bulk messages.",
          "example": "d41f0423195f271f"
        },
        "reference": { "$ref": "#/definitions/Model10" },
        "sendAt": {
          "type": "string",
          "format": "date-time",
          "description": "Send message at specified time. Overrides message level `sendAt` value.",
          "example": "2021-07-08T07:06:34.336Z"
        },
        "skipped": { "$ref": "#/definitions/skipped" }
      }
    },
    "BulkResponseList": {
      "type": "array",
      "description": "Bulk message responses",
      "items": { "$ref": "#/definitions/BulkResponseEntry" }
    },
    "SubmitMessageResponse": {
      "type": "object",
      "properties": {
        "response": { "type": "string", "example": "Queued for delivery" },
        "messageId": {
          "type": "string",
          "description": "Message-ID header value. Not present for bulk messages.",
          "example": "<a2184d08-a470-fec6-a493-fa211a3756e9@example.com>"
        },
        "queueId": {
          "type": "string",
          "description": "Queue identifier for scheduled email. Not present for bulk messages.",
          "example": "d41f0423195f271f"
        },
        "sendAt": {
          "type": "string",
          "format": "date",
          "description": "Scheduled send time",
          "example": "2021-07-08T07:06:34.336Z"
        },
        "reference": { "$ref": "#/definitions/Model9" },
        "preview": {
          "type": "string",
          "description": "Base64 encoded RFC822 email if a preview was requested",
          "example": "Q29udGVudC1UeXBlOiBtdWx0aX..."
        },
        "mailMerge": { "$ref": "#/definitions/BulkResponseList" }
      }
    },
    "gateway": {
      "type": "string",
      "description": "Optional gateway ID",
      "example": false,
      "enum": [false],
      "maxLength": 256
    },
    "DeliveryStartRequest": {
      "type": "object",
      "properties": { "gateway": { "$ref": "#/definitions/gateway" } }
    },
    "DeliveryStartResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "Was the test started",
          "example": true
        },
        "deliveryTest": {
          "type": "string",
          "description": "Test ID",
          "example": "6420a6ad-7f82-4e4f-8112-82a9dad1f34d",
          "x-format": { "guid": { "version": ["uuidv4", "uuidv5"] } }
        }
      }
    },
    "EmptyLicenseResponse": {
      "type": "object",
      "properties": {
        "active": { "type": "boolean", "example": false },
        "details": { "type": "boolean", "example": false },
        "type": { "type": "string", "example": "SSPL-1.0-or-later" }
      }
    },
    "DeleteRequestResponse": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "deleted": {
          "type": "boolean",
          "description": "Was the account deleted",
          "default": true
        }
      },
      "required": ["account"]
    },
    "DeleteBlocklistResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean",
          "description": "Was the address removed from the list",
          "default": true
        }
      }
    },
    "Model11": {
      "type": "object",
      "properties": {
        "gateway": {
          "type": "string",
          "description": "Gateway ID",
          "example": "example",
          "maxLength": 256
        },
        "deleted": {
          "type": "boolean",
          "description": "Was the gateway deleted",
          "default": true
        }
      },
      "required": ["gateway"]
    },
    "DeleteAppRequestResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "OAuth2 application ID",
          "example": "AAABhaBPHscAAAAH",
          "maxLength": 256
        },
        "deleted": {
          "type": "boolean",
          "description": "Was the gateway deleted",
          "default": true
        },
        "accounts": {
          "type": "integer",
          "description": "The number of accounts registered with this application. Not available for legacy apps.",
          "example": 12
        }
      },
      "required": ["id"]
    },
    "DeleteOutboxEntryResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean",
          "description": "Was the message deleted",
          "default": true
        }
      }
    },
    "DeleteTokenRequestResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean",
          "description": "Was the account deleted",
          "default": true
        }
      }
    },
    "DeleteMailboxResponse": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Full path to mailbox",
          "example": "Kalender/S&APw-nnip&AOQ-evad"
        },
        "deleted": {
          "type": "boolean",
          "description": "Was the mailbox deleted",
          "example": true
        }
      },
      "required": ["path"]
    },
    "DeleteTemplateRequestResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean",
          "description": "Was the account flushed",
          "default": true
        },
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        }
      },
      "required": ["account"]
    },
    "Model12": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean",
          "description": "Was the template deleted",
          "default": true
        },
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "id": {
          "type": "string",
          "description": "Template ID",
          "example": "AAABgS-UcAYAAAABAA",
          "maxLength": 256
        }
      },
      "required": ["account", "id"]
    },
    "moved": {
      "type": "object",
      "description": "Present if message was moved to Trash",
      "properties": {
        "destination": {
          "type": "string",
          "description": "Trash folder path",
          "example": "Trash"
        },
        "message": {
          "type": "string",
          "description": "Message ID in Trash",
          "example": "AAAAAwAAAWg"
        }
      },
      "required": ["destination", "message"]
    },
    "MessageDeleteResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean",
          "description": "Was the delete action executed",
          "example": false
        },
        "moved": { "$ref": "#/definitions/moved" }
      }
    },
    "Model13": {
      "type": "object",
      "description": "Optional TLS configuration settings",
      "properties": {
        "rejectUnauthorized": {
          "type": "boolean",
          "description": "Whether to reject invalid TLS certificates",
          "example": true
        },
        "minVersion": {
          "type": "string",
          "description": "The minimum TLS version to allow",
          "example": "TLSv1.2",
          "maxLength": 256
        }
      }
    },
    "IMAPUpdate": {
      "type": "object",
      "description": "IMAP configuration",
      "enum": [false],
      "properties": {
        "partial": {
          "type": "boolean",
          "description": "Set to true to update only the provided keys; by default, the entire object is replaced",
          "example": false,
          "default": false
        },
        "auth": { "$ref": "#/definitions/Authentication" },
        "useAuthServer": {
          "type": "boolean",
          "description": "Set to true to use an external authentication server instead of providing username/password directly",
          "example": false
        },
        "host": {
          "type": "string",
          "description": "The hostname of the IMAP server to connect to",
          "example": "imap.gmail.com",
          "x-format": { "hostname": true }
        },
        "port": {
          "type": "integer",
          "description": "The port number of the IMAP service",
          "example": 993,
          "minimum": 1,
          "maximum": 65535
        },
        "secure": {
          "type": "boolean",
          "description": "Whether to use TLS for the connection (usually true for port 993)",
          "example": true
        },
        "tls": { "$ref": "#/definitions/Model13" },
        "resyncDelay": {
          "type": "integer",
          "description": "Delay in seconds between full resynchronizations",
          "example": 900
        },
        "disabled": {
          "type": "boolean",
          "description": "Set to true to disable IMAP handling for this account",
          "example": false
        },
        "sentMailPath": {
          "type": "string",
          "description": "Folder where sent messages are uploaded. Defaults to the account's 'Sent Mail' folder. Set to `null` to unset.",
          "example": "Sent Mail",
          "maxLength": 1024
        },
        "draftsMailPath": {
          "type": "string",
          "description": "Folder for drafts. Defaults to the account's 'Drafts' folder. Set to `null` to unset.",
          "example": "Drafts",
          "maxLength": 1024
        },
        "junkMailPath": {
          "type": "string",
          "description": "Folder for spam messages. Defaults to the account's 'Junk' folder. Set to `null` to unset.",
          "example": "Junk",
          "maxLength": 1024
        },
        "trashMailPath": {
          "type": "string",
          "description": "Folder for deleted emails. Defaults to the account's 'Trash' folder. Set to `null` to unset.",
          "example": "Trash",
          "maxLength": 1024
        },
        "archiveMailPath": {
          "type": "string",
          "description": "Folder for archived emails. Defaults to the account's 'Archive' folder. Set to `null` to unset.",
          "example": "Archive",
          "maxLength": 1024
        }
      }
    },
    "Model14": {
      "type": "object",
      "description": "Optional TLS configuration settings",
      "properties": {
        "rejectUnauthorized": {
          "type": "boolean",
          "description": "Whether to reject invalid TLS certificates",
          "example": true
        },
        "minVersion": {
          "type": "string",
          "description": "The minimum TLS version to allow",
          "example": "TLSv1.2",
          "maxLength": 256
        }
      }
    },
    "SMTPUpdate": {
      "type": "object",
      "description": "SMTP configuration",
      "enum": [false],
      "properties": {
        "partial": {
          "type": "boolean",
          "description": "Set to true to update only the provided keys; by default, the entire object is replaced",
          "example": false,
          "default": false
        },
        "auth": { "$ref": "#/definitions/Authentication" },
        "useAuthServer": {
          "type": "boolean",
          "description": "Set to true to use an external authentication server instead of providing username/password directly",
          "example": false
        },
        "host": {
          "type": "string",
          "description": "The hostname of the SMTP server to connect to",
          "example": "smtp.gmail.com",
          "x-format": { "hostname": true }
        },
        "port": {
          "type": "integer",
          "description": "The port number of the SMTP service",
          "example": 587,
          "minimum": 1,
          "maximum": 65535
        },
        "secure": {
          "type": "boolean",
          "description": "Whether to use TLS for the connection (usually true for port 465)",
          "example": false
        },
        "tls": { "$ref": "#/definitions/Model14" }
      }
    },
    "OAuth2Update": {
      "type": "object",
      "description": "OAuth2 configuration",
      "enum": [false],
      "properties": {
        "partial": {
          "type": "boolean",
          "description": "Set to true to update only the provided keys; by default, the entire object is replaced",
          "example": false,
          "default": false
        },
        "authorize": {
          "type": "boolean",
          "description": "Set to true to obtain a redirect link to the OAuth2 consent screen.",
          "example": false
        },
        "provider": {
          "type": "string",
          "description": "OAuth2 Application ID for an application configured in EmailEngine.",
          "example": "AAABhaBPHscAAAAH",
          "maxLength": 256
        },
        "auth": { "$ref": "#/definitions/OAuth2Authentication" },
        "useAuthServer": {
          "type": "boolean",
          "description": "Set to true to use an external authentication server instead of EmailEngine managing access tokens.",
          "example": false
        },
        "accessToken": {
          "type": "string",
          "description": "OAuth2 access token for the email account.",
          "example": "ya29.a0ARrdaM8a...",
          "maxLength": 16384
        },
        "refreshToken": {
          "type": "string",
          "description": "OAuth2 refresh token for the email account.",
          "example": "1//09Ie3CtORQYm...",
          "maxLength": 16384
        },
        "authority": {
          "type": "string",
          "description": "Specifies the Outlook account type: 'consumers', 'organizations', 'common', or an organization ID.",
          "example": "consumers",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "expires": {
          "type": "string",
          "format": "date-time",
          "description": "Expiration date and time of the access token.",
          "example": "2021-03-22T13:13:31.000Z"
        }
      },
      "required": ["auth"]
    },
    "UpdateAccount": {
      "type": "object",
      "example": {
        "name": "Nyan Cat",
        "email": "nyan.cat@example.com",
        "imap": { "partial": true, "disabled": true },
        "smtp": { "partial": true, "host": "mail.example.com" }
      },
      "properties": {
        "name": {
          "type": "string",
          "description": "Display name for the account",
          "example": "My Email Account",
          "maxLength": 256
        },
        "email": {
          "type": "string",
          "description": "Default email address of the account",
          "example": "user@example.com",
          "x-format": { "email": true }
        },
        "path": { "$ref": "#/definitions/AccountPath" },
        "subconnections": { "$ref": "#/definitions/SubconnectionPaths" },
        "webhooks": {
          "type": "string",
          "description": "Account-specific webhook URL",
          "example": "https://myservice.com/imap/webhooks",
          "x-format": {
            "uri": { "scheme": ["http", "https"], "allowRelative": false }
          }
        },
        "copy": {
          "type": "boolean",
          "description": "Copy submitted messages to Sent folder. Set to `null` to unset and use provider specific default.",
          "example": null
        },
        "logs": {
          "type": "boolean",
          "description": "Store recent logs",
          "example": false
        },
        "notifyFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Send webhooks for messages starting from provided date. The default is the account creation date. Only applies for IMAP accounts.",
          "example": "2021-07-08T07:06:34.336Z"
        },
        "proxy": {
          "type": "string",
          "description": "Proxy URL",
          "example": "socks://proxy.example.com:1080",
          "x-format": {
            "uri": {
              "scheme": ["http", "https", "socks", "socks4", "socks5"],
              "allowRelative": false
            }
          }
        },
        "smtpEhloName": {
          "type": "string",
          "description": "Hostname to use for the SMTP EHLO/HELO greeting",
          "example": "my.proxy.tld",
          "x-format": { "hostname": true }
        },
        "imap": { "$ref": "#/definitions/IMAPUpdate" },
        "smtp": { "$ref": "#/definitions/SMTPUpdate" },
        "oauth2": { "$ref": "#/definitions/OAuth2Update" },
        "webhooksCustomHeaders": {
          "$ref": "#/definitions/AccountWebhooksCustomHeaders"
        },
        "locale": {
          "type": "string",
          "description": "Optional locale",
          "example": "fr",
          "maxLength": 100
        },
        "tz": {
          "type": "string",
          "description": "Optional timezone",
          "example": "Europe/Tallinn",
          "maxLength": 100
        }
      }
    },
    "Model15": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        }
      },
      "required": ["account"]
    },
    "clientId": {
      "type": "string",
      "description": "Client or Application ID for 3-legged OAuth2 applications",
      "example": "52422112755-3uov8bjwlrullq122rdm6l8ui25ho7qf.apps.googleusercontent.com",
      "enum": [false],
      "maxLength": 256,
      "x-convert": { "trim": true }
    },
    "Model16": {
      "type": "array",
      "description": "OAuth2 Extra Scopes",
      "items": {
        "type": "string",
        "example": "User.Read",
        "maxLength": 255,
        "x-convert": { "trim": true }
      }
    },
    "Model17": {
      "type": "array",
      "description": "OAuth2 scopes to skip from the base set",
      "items": {
        "type": "string",
        "example": "SMTP.Send",
        "maxLength": 255,
        "x-convert": { "trim": true }
      }
    },
    "serviceClient": {
      "type": "string",
      "description": "Service client ID for 2-legged OAuth2 applications",
      "example": "7103296518315821565203",
      "enum": [false],
      "maxLength": 256,
      "x-convert": { "trim": true }
    },
    "AzureCloud": {
      "type": "string",
      "description": "Azure cloud type for Outlook OAuth2 applications",
      "example": "global",
      "enum": ["global", "gcc-high", "dod", "china"],
      "x-convert": { "trim": true }
    },
    "redirectUrl": {
      "type": "string",
      "description": "Redirect URL for 3-legged OAuth2 applications",
      "example": "https://myservice.com/oauth",
      "enum": [false],
      "x-format": {
        "uri": { "scheme": ["http", "https"], "allowRelative": false }
      }
    },
    "UpdateOAuthApp": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Application name",
          "example": "My Gmail App",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "description": {
          "type": "string",
          "description": "Application description",
          "example": "My cool app",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "title": {
          "type": "string",
          "description": "Title for the application button",
          "example": "App title",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "enabled": {
          "type": "boolean",
          "description": "Enable this app",
          "example": true
        },
        "clientId": { "$ref": "#/definitions/clientId" },
        "clientSecret": {
          "type": "string",
          "description": "Client secret for 3-legged OAuth2 applications",
          "example": "boT7Q~dUljnfFdVuqpC11g8nGMjO8kpRAv-ZB",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "pubSubApp": {
          "type": "string",
          "description": "Cloud Pub/Sub app for Gmail API webhooks",
          "example": "AAAAAQAACnA",
          "maxLength": 512
        },
        "extraScopes": { "$ref": "#/definitions/Model16" },
        "skipScopes": { "$ref": "#/definitions/Model17" },
        "serviceClient": { "$ref": "#/definitions/serviceClient" },
        "googleProjectId": { "$ref": "#/definitions/googleProjectId" },
        "googleWorkspaceAccounts": {
          "type": "boolean",
          "description": "Show only Google Workspace accounts on the OAuth2 login page",
          "example": false
        },
        "serviceClientEmail": {
          "type": "string",
          "description": "Service Client Email for 2-legged OAuth2 applications",
          "example": "name@project-123.iam.gserviceaccount.com",
          "x-format": { "email": true }
        },
        "serviceKey": {
          "type": "string",
          "description": "PEM formatted service secret for 2-legged OAuth2 applications",
          "example": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgk...",
          "maxLength": 102400,
          "x-convert": { "trim": true }
        },
        "authority": {
          "type": "string",
          "description": "Authorization tenant value for Outlook OAuth2 applications",
          "example": "common",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "cloud": { "$ref": "#/definitions/AzureCloud" },
        "tenant": {
          "type": "string",
          "example": "f8cdef31-a31e-4b4a-93e4-5f571e91255a",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "redirectUrl": { "$ref": "#/definitions/redirectUrl" }
      }
    },
    "UpdateOAuthAppResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "OAuth2 app ID",
          "example": "example",
          "maxLength": 256
        }
      },
      "required": ["id"]
    },
    "AddFlags": {
      "type": "array",
      "description": "Add flags.",
      "example": ["\\Seen"],
      "x-constraint": { "single": true },
      "items": { "type": "string", "maxLength": 128 }
    },
    "DeleteFlags": {
      "type": "array",
      "description": "Remove flags.",
      "example": ["\\Flagged"],
      "x-constraint": { "single": true },
      "items": { "type": "string", "maxLength": 128 }
    },
    "SetFlags": {
      "type": "array",
      "description": "Replace all existing flags.",
      "example": ["\\Seen", "\\Flagged"],
      "x-constraint": { "single": true },
      "items": { "type": "string", "maxLength": 128 }
    },
    "FlagUpdate": {
      "type": "object",
      "description": "Updates for message flags.",
      "properties": {
        "add": { "$ref": "#/definitions/AddFlags" },
        "delete": { "$ref": "#/definitions/DeleteFlags" },
        "set": { "$ref": "#/definitions/SetFlags" }
      }
    },
    "AddLabels": {
      "type": "array",
      "description": "Add labels. Each label is a mailbox ID or a path if the ID is not set.",
      "example": ["Label_971539351003152516"],
      "x-constraint": { "single": true },
      "items": { "type": "string", "maxLength": 128 }
    },
    "DeleteLabels": {
      "type": "array",
      "description": "Remove labels. Each label is a mailbox ID or a path if the ID is not set.",
      "example": ["Label_971539351003152516"],
      "x-constraint": { "single": true },
      "items": { "type": "string", "maxLength": 128 }
    },
    "LabelUpdate": {
      "type": "object",
      "description": "Updates for message labels. Labels can only be used with Gmail IMAP or Gmail API.",
      "properties": {
        "add": { "$ref": "#/definitions/AddLabels" },
        "delete": { "$ref": "#/definitions/DeleteLabels" }
      }
    },
    "MessageUpdate": {
      "type": "object",
      "example": { "flags": { "add": "\\Seen", "delete": "\\Flagged" } },
      "properties": {
        "flags": { "$ref": "#/definitions/FlagUpdate" },
        "labels": { "$ref": "#/definitions/LabelUpdate" }
      }
    },
    "MessagesUpdateRequest": {
      "type": "object",
      "properties": {
        "search": { "$ref": "#/definitions/SearchQuery" },
        "update": { "$ref": "#/definitions/MessageUpdate" }
      },
      "required": ["search"]
    },
    "FlagResponse": {
      "type": "object",
      "properties": {
        "add": { "type": "boolean", "example": true },
        "delete": { "type": "boolean", "example": false },
        "set": { "type": "boolean", "example": false }
      }
    },
    "MessageUpdateResponse": {
      "type": "object",
      "properties": {
        "flags": { "$ref": "#/definitions/FlagResponse" },
        "labels": { "$ref": "#/definitions/FlagResponse" }
      }
    },
    "TargetMailboxPath": {
      "type": "array",
      "description": "New mailbox path as an array or a string. If account is namespaced then namespace prefix is added by default.",
      "example": ["Parent folder", "Subfolder"],
      "x-constraint": { "single": true },
      "items": { "type": "string", "maxLength": 256 }
    },
    "RenameMailbox": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Mailbox folder path to rename",
          "example": "Previous Folder Name"
        },
        "newPath": { "$ref": "#/definitions/TargetMailboxPath" }
      },
      "required": ["path"]
    },
    "RenameMailboxResponse": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Mailbox folder path to rename",
          "example": "Previous Mail"
        },
        "newPath": {
          "type": "string",
          "description": "Full path to mailbox",
          "example": "Kalender/S&APw-nnip&AOQ-evad"
        },
        "renamed": {
          "type": "boolean",
          "description": "Was the mailbox renamed",
          "example": true
        }
      },
      "required": ["path", "newPath"]
    },
    "RequestSync": {
      "type": "object",
      "properties": {
        "sync": {
          "type": "boolean",
          "description": "Only sync if true",
          "default": false
        }
      }
    },
    "RequestSyncResponse": {
      "type": "object",
      "properties": {
        "sync": {
          "type": "boolean",
          "description": "Sync status",
          "default": false
        }
      }
    },
    "RequestReconnect": {
      "type": "object",
      "properties": {
        "reconnect": {
          "type": "boolean",
          "description": "Only reconnect if true",
          "default": false
        }
      }
    },
    "RequestReconnectResponse": {
      "type": "object",
      "properties": {
        "reconnect": {
          "type": "boolean",
          "description": "Reconnection status",
          "default": false
        }
      }
    },
    "RequestFlush": {
      "type": "object",
      "properties": {
        "flush": {
          "type": "boolean",
          "description": "Only flush the account if true",
          "default": false
        },
        "notifyFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Send webhooks for messages starting from provided date. The default is the account creation date. Only applies for IMAP accounts.",
          "example": "2021-07-08T07:06:34.336Z",
          "default": "now"
        },
        "imapIndexer": { "$ref": "#/definitions/IMAPIndexer" }
      }
    },
    "RequestFlushResponse": {
      "type": "object",
      "properties": {
        "flush": {
          "type": "boolean",
          "description": "Flush status",
          "default": false
        }
      }
    },
    "UpdateGateway": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Account Name",
          "example": "John Smith",
          "maxLength": 256
        },
        "user": {
          "type": "string",
          "maxLength": 1024,
          "x-convert": { "trim": true }
        },
        "pass": { "type": "string", "maxLength": 1024 },
        "host": {
          "type": "string",
          "description": "Hostname to connect to",
          "example": "smtp.gmail.com",
          "x-format": { "hostname": true }
        },
        "port": {
          "type": "integer",
          "description": "Service port number",
          "example": 465,
          "minimum": 1,
          "maximum": 65536
        },
        "secure": {
          "type": "boolean",
          "description": "Should connection use TLS. Usually true for port 465",
          "example": true
        }
      }
    },
    "UpdateGatewayResponse": {
      "type": "object",
      "properties": {
        "gateway": {
          "type": "string",
          "description": "Gateway ID",
          "example": "example",
          "maxLength": 256
        }
      },
      "required": ["gateway"]
    },
    "SettingsPutQueuePayload": {
      "type": "object",
      "properties": {
        "paused": {
          "type": "boolean",
          "description": "Set queue state to paused",
          "example": false
        }
      }
    },
    "SettingsPutQueueResponse": {
      "type": "object",
      "properties": {
        "queue": { "$ref": "#/definitions/queue" },
        "paused": {
          "type": "boolean",
          "description": "Is the queue paused or not",
          "example": false
        }
      },
      "required": ["queue"]
    },
    "UpdateTemplateContent": {
      "type": "object",
      "properties": {
        "subject": {
          "type": "string",
          "description": "Message subject",
          "example": "What a wonderful message",
          "maxLength": 10240,
          "x-convert": { "trim": true }
        },
        "text": {
          "type": "string",
          "description": "Plaintext content of the message",
          "example": "Hello from myself!",
          "maxLength": 5242880,
          "x-convert": { "trim": true }
        },
        "html": {
          "type": "string",
          "description": "HTML content of the message",
          "example": "<p>Hello from myself!</p>",
          "maxLength": 5242880,
          "x-convert": { "trim": true }
        },
        "previewText": {
          "type": "string",
          "description": "Preview text that appears in the inbox after the subject line",
          "example": "Welcome to our newsletter!",
          "maxLength": 1024
        }
      }
    },
    "UpdateTemplate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the template",
          "example": "Transaction receipt",
          "maxLength": 256
        },
        "description": {
          "type": "string",
          "description": "Optional description of the template",
          "example": "Something about the template",
          "maxLength": 1024
        },
        "format": { "$ref": "#/definitions/format" },
        "content": { "$ref": "#/definitions/UpdateTemplateContent" }
      }
    },
    "UpdateTemplateResponse": {
      "type": "object",
      "properties": {
        "updated": {
          "type": "boolean",
          "description": "Was the template updated or not"
        },
        "account": {
          "type": "string",
          "description": "Account ID",
          "example": "user123",
          "maxLength": 256,
          "x-convert": { "trim": true }
        },
        "id": {
          "type": "string",
          "description": "Template ID",
          "example": "example",
          "maxLength": 256
        }
      },
      "required": ["account", "id"]
    },
    "MessagesMoveRequest": {
      "type": "object",
      "properties": {
        "search": { "$ref": "#/definitions/SearchQuery" },
        "path": {
          "type": "string",
          "description": "Target mailbox folder path",
          "example": "INBOX"
        }
      },
      "required": ["search", "path"]
    },
    "IdMapTuple": {
      "type": "array",
      "x-constraint": { "length": 2 },
      "items": {
        "type": "string",
        "description": "Message ID",
        "maxLength": 256
      }
    },
    "IdMapArray": {
      "type": "array",
      "description": "An optional map of source and target ID values, if the server provided this info",
      "example": [["AAAAAQAACnA", "AAAAAwAAAD4"]],
      "items": { "$ref": "#/definitions/IdMapTuple" }
    },
    "EmailIdsArray": {
      "type": "array",
      "description": "An optional list of emailId values, if the server supports unique email IDs",
      "items": { "type": "string", "example": "1278455344230334865" }
    },
    "MessagesMoveResponse": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Target mailbox folder path",
          "example": "INBOX"
        },
        "idMap": { "$ref": "#/definitions/IdMapArray" },
        "emailIds": { "$ref": "#/definitions/EmailIdsArray" }
      },
      "required": ["path"]
    },
    "MessagesDeleteRequest": {
      "type": "object",
      "properties": { "search": { "$ref": "#/definitions/SearchQuery" } },
      "required": ["search"]
    },
    "MessagesMovedToTrash": {
      "type": "object",
      "description": "Value is present if messages were moved to Trash",
      "properties": {
        "destination": {
          "type": "string",
          "description": "Trash folder path",
          "example": "Trash"
        },
        "idMap": { "$ref": "#/definitions/IdMapArray" },
        "emailIds": { "$ref": "#/definitions/EmailIdsArray" }
      },
      "required": ["destination"]
    },
    "MessagesDeleteResponse": {
      "type": "object",
      "properties": {
        "deleted": {
          "type": "boolean",
          "description": "Was the delete action executed",
          "example": false
        },
        "moved": { "$ref": "#/definitions/MessagesMovedToTrash" }
      }
    },
    "MessageMove": {
      "type": "object",
      "example": { "path": "Target/Folder" },
      "properties": {
        "path": {
          "type": "string",
          "description": "Destination mailbox folder path",
          "example": "INBOX"
        },
        "source": {
          "type": "string",
          "description": "Source mailbox folder path (Gmail API only). Needed to remove the label from the message.",
          "example": "INBOX"
        }
      },
      "required": ["path"]
    },
    "MessageMoveResponse": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "Destination mailbox folder path",
          "example": "INBOX"
        },
        "id": {
          "type": "string",
          "description": "ID of the moved message. Only included if the server provides it.",
          "example": "AAAAAQAACnA",
          "maxLength": 256
        },
        "uid": {
          "type": "integer",
          "description": "UID of the moved message, applies only to IMAP accounts. Only included if the server provides it.",
          "example": 12345
        }
      },
      "required": ["path"]
    }
  }
}
